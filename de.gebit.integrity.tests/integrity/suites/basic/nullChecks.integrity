import integrity.fixtures.basic.arbitrary.*
import integrity.fixtures.basic.noop.*

packagedef integrity.basic with

	suitedef nullChecks with
	
		// These tests should succeed, as they just return null(s) and expect those to be returned
		test echoStringTest string: null = null
		test echoStringArrayTest strings: null, null, null = null, null, null
		
		// These tests must fail
		test echoStringTest string: "foo" = null
		test echoStringTest string: null = "foo"
		test echoStringArrayTest strings: null, "foo", null = null, null, "foo"
		test echoStringArrayTest strings: null, null = null, null, null
		test echoStringArrayTest strings: null, null = null
		test echoStringArrayTest strings: null = null, null
	
		// Arbitrary parameters with null values and null checks and one inexistent value; this must succeed
		test arbitraryParamEchoTest fixparam: null +testparam1: null fixedresult = null +testresult1 = null +testresult2 = inexistent
		
		// This must fail
		test arbitraryParamEchoTest fixparam: 1 +testparam1: 2 +testparam2: "foo" fixedresult = null +testresult1 = null +testresult2 = null +"testresult 3" = null
	
		// This must also fail (because testparam1 goes into testresult1 so we have a result, albeit it being null)
		test arbitraryParamEchoTest fixparam: null +testparam1: null fixedresult = null +testresult1 = inexistent
	
	suiteend

packageend