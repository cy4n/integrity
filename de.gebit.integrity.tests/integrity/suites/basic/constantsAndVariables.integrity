import integrity.fixtures.basic.arbitrary.echo
import integrity.fixtures.basic.noop.*

packagedef integrity.basic with

	suitedef multiValueStringConstant with
		
		constant stringConst "1", "2"
		
		test echoStringArrayTest strings: stringConst = "1", "2"
	
	suiteend
	

	suitedef multiValueMapConstant with
			
		constant mapConst {
			key1: "The first map"
		}, {
			key1: "The second map"
		}
		
		test echoMapArrayTest map: mapConst =  {
			key1: "The first map"
		}, {
			key1: "The second map"
		}
	
	suiteend
	
	
	suitedef variableAttributeAccessSuccess with
	
		variable testvar
		call integrity.fixtures.basic.beans.createSimpleBeanUntypedCall -> testvar
		
		test echoStringTest string: testvar#firstParameter = "string"		
		test echoIntegerTest integer: testvar#secondParameter = 100
	
	suiteend
	
	
	suitedef variableAttributeAccessAttributeNotFound with
	
		variable testvar
		call integrity.fixtures.basic.beans.createSimpleBeanUntypedCall -> testvar
		
		test echoStringTest string: testvar#nonexistentParameter = "string"
	
	suiteend
	


packageend