package de.gebit.integrity.tests.junit;

import java.io.File;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

import org.jdom.Document;
import org.jdom.JDOMException;
import org.jdom.input.SAXBuilder;

import de.gebit.integrity.runner.TestModel;
import de.gebit.integrity.runner.TestRunner;
import de.gebit.integrity.runner.callbacks.CompoundTestRunnerCallback;
import de.gebit.integrity.runner.callbacks.TestRunnerCallback;
import de.gebit.integrity.runner.callbacks.console.ConsoleTestCallback;
import de.gebit.integrity.runner.callbacks.xml.XmlWriterTestCallback;
import de.gebit.integrity.runner.exceptions.ModelLoadException;
import de.gebit.integrity.runner.providers.FilesystemTestResourceProvider;
import de.gebit.integrity.runner.providers.TestResourceProvider;

public class IntegrityJUnitTest {
	
	private static final String RESULT_DIRECTORY = "results/";
	
	protected Document executeIntegritySuite(String aSuiteName) throws ModelLoadException, IOException, JDOMException {
		List<File> tempFileList = new ArrayList<File>();
		tempFileList.add(new File("integrity"));
		
		TestResourceProvider tempResourceProvider = new FilesystemTestResourceProvider(tempFileList, true);
		TestModel tempModel = TestModel.loadTestModel(tempResourceProvider, false);
		
		File tempXmlFile = File.createTempFile("integrityJUnit", ".xml");
		
		TestRunnerCallback tempCallback = new CompoundTestRunnerCallback(new ConsoleTestCallback(getClass().getClassLoader()), new XmlWriterTestCallback(getClass().getClassLoader(), tempXmlFile, "Integrity JUnit Testing", false));
				
		TestRunner tempRunner = new TestRunner(tempModel, tempCallback, null, null);
		tempRunner.run(tempModel.getSuiteByName(aSuiteName), false);
				
		SAXBuilder tempBuilder = new SAXBuilder(false);
		return tempBuilder.build(tempXmlFile);
	}
	
	protected void compareDocumentToReference(Document aDoc) throws JDOMException, IOException {
		String tempRootSuiteName = aDoc.getRootElement().getChild("suite").getAttribute("name").getValue();
		
		SAXBuilder tempBuilder = new SAXBuilder(false);
		Document tempRef = tempBuilder.build(new File(RESULT_DIRECTORY + tempRootSuiteName + ".xml"));
	}

}
