package de.gebit.integrity.tests.junit;

import static org.junit.Assert.fail;

import java.io.BufferedInputStream;
import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.PrintStream;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;

import org.jdom.Document;
import org.jdom.JDOMException;
import org.jdom.input.SAXBuilder;

import de.gebit.integrity.runner.TestModel;
import de.gebit.integrity.runner.TestRunner;
import de.gebit.integrity.runner.callbacks.TestRunnerCallback;
import de.gebit.integrity.runner.callbacks.xml.XmlWriterTestCallback;
import de.gebit.integrity.runner.exceptions.ModelLoadException;
import de.gebit.integrity.runner.providers.FilesystemTestResourceProvider;
import de.gebit.integrity.runner.providers.TestResourceProvider;

public class IntegrityJUnitTest {
	
	protected Document executeIntegritySuite(String aSuiteName) throws ModelLoadException, IOException, JDOMException {
		List<File> tempFileList = new ArrayList<File>();
		tempFileList.add(new File("integrity"));
		
		TestResourceProvider tempResourceProvider = new FilesystemTestResourceProvider(tempFileList, true);
		TestModel tempModel = TestModel.loadTestModel(tempResourceProvider, false);
		
		File tempXmlFile = File.createTempFile("integrityJUnit", ".xml");
		
		TestRunnerCallback tempCallback = new XmlWriterTestCallback(getClass().getClassLoader(), tempXmlFile, "Integrity JUnit Testing", false);
				
		TestRunner tempRunner = new TestRunner(tempModel, tempCallback, null, null);
		tempRunner.run(tempModel.getSuiteByName(aSuiteName), false);
				
		SAXBuilder tempBuilder = new SAXBuilder(true);
		return tempBuilder.build(new File("result.xml"));			
	}

}
