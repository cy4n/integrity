/*
* generated by Xtext
*/
grammar InternalDSL;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package de.gebit.integrity.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package de.gebit.integrity.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import de.gebit.integrity.services.DSLGrammarAccess;

}

@parser::members {
 
 	private DSLGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(DSLGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleModel
entryRuleModel 
:
{ before(grammarAccess.getModelRule()); }
	 ruleModel
{ after(grammarAccess.getModelRule()); } 
	 EOF 
;

// Rule Model
ruleModel
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getModelAccess().getGroup()); }
(rule__Model__Group__0)
{ after(grammarAccess.getModelAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStatement
entryRuleStatement 
:
{ before(grammarAccess.getStatementRule()); }
	 ruleStatement
{ after(grammarAccess.getStatementRule()); } 
	 EOF 
;

// Rule Statement
ruleStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatementAccess().getAlternatives()); }
(rule__Statement__Alternatives)
{ after(grammarAccess.getStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleComment
entryRuleVisibleComment 
:
{ before(grammarAccess.getVisibleCommentRule()); }
	 ruleVisibleComment
{ after(grammarAccess.getVisibleCommentRule()); } 
	 EOF 
;

// Rule VisibleComment
ruleVisibleComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleCommentAccess().getAlternatives()); }
(rule__VisibleComment__Alternatives)
{ after(grammarAccess.getVisibleCommentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleSingleLineComment
entryRuleVisibleSingleLineComment 
:
{ before(grammarAccess.getVisibleSingleLineCommentRule()); }
	 ruleVisibleSingleLineComment
{ after(grammarAccess.getVisibleSingleLineCommentRule()); } 
	 EOF 
;

// Rule VisibleSingleLineComment
ruleVisibleSingleLineComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleSingleLineCommentAccess().getGroup()); }
(rule__VisibleSingleLineComment__Group__0)
{ after(grammarAccess.getVisibleSingleLineCommentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleMultiLineComment
entryRuleVisibleMultiLineComment 
:
{ before(grammarAccess.getVisibleMultiLineCommentRule()); }
	 ruleVisibleMultiLineComment
{ after(grammarAccess.getVisibleMultiLineCommentRule()); } 
	 EOF 
;

// Rule VisibleMultiLineComment
ruleVisibleMultiLineComment
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleMultiLineCommentAccess().getGroup()); }
(rule__VisibleMultiLineComment__Group__0)
{ after(grammarAccess.getVisibleMultiLineCommentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVisibleDivider
entryRuleVisibleDivider 
:
{ before(grammarAccess.getVisibleDividerRule()); }
	 ruleVisibleDivider
{ after(grammarAccess.getVisibleDividerRule()); } 
	 EOF 
;

// Rule VisibleDivider
ruleVisibleDivider
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVisibleDividerAccess().getGroup()); }
(rule__VisibleDivider__Group__0)
{ after(grammarAccess.getVisibleDividerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageDefinition
entryRulePackageDefinition 
:
{ before(grammarAccess.getPackageDefinitionRule()); }
	 rulePackageDefinition
{ after(grammarAccess.getPackageDefinitionRule()); } 
	 EOF 
;

// Rule PackageDefinition
rulePackageDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageDefinitionAccess().getGroup()); }
(rule__PackageDefinition__Group__0)
{ after(grammarAccess.getPackageDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePackageStatement
entryRulePackageStatement 
:
{ before(grammarAccess.getPackageStatementRule()); }
	 rulePackageStatement
{ after(grammarAccess.getPackageStatementRule()); } 
	 EOF 
;

// Rule PackageStatement
rulePackageStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPackageStatementAccess().getAlternatives()); }
(rule__PackageStatement__Alternatives)
{ after(grammarAccess.getPackageStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForkDefinition
entryRuleForkDefinition 
:
{ before(grammarAccess.getForkDefinitionRule()); }
	 ruleForkDefinition
{ after(grammarAccess.getForkDefinitionRule()); } 
	 EOF 
;

// Rule ForkDefinition
ruleForkDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForkDefinitionAccess().getGroup()); }
(rule__ForkDefinition__Group__0)
{ after(grammarAccess.getForkDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleForkParameter
entryRuleForkParameter 
:
{ before(grammarAccess.getForkParameterRule()); }
	 ruleForkParameter
{ after(grammarAccess.getForkParameterRule()); } 
	 EOF 
;

// Rule ForkParameter
ruleForkParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getForkParameterAccess().getGroup()); }
(rule__ForkParameter__Group__0)
{ after(grammarAccess.getForkParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariantDefinition
entryRuleVariantDefinition 
:
{ before(grammarAccess.getVariantDefinitionRule()); }
	 ruleVariantDefinition
{ after(grammarAccess.getVariantDefinitionRule()); } 
	 EOF 
;

// Rule VariantDefinition
ruleVariantDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariantDefinitionAccess().getGroup()); }
(rule__VariantDefinition__Group__0)
{ after(grammarAccess.getVariantDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTestDefinition
entryRuleTestDefinition 
:
{ before(grammarAccess.getTestDefinitionRule()); }
	 ruleTestDefinition
{ after(grammarAccess.getTestDefinitionRule()); } 
	 EOF 
;

// Rule TestDefinition
ruleTestDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestDefinitionAccess().getGroup()); }
(rule__TestDefinition__Group__0)
{ after(grammarAccess.getTestDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCallDefinition
entryRuleCallDefinition 
:
{ before(grammarAccess.getCallDefinitionRule()); }
	 ruleCallDefinition
{ after(grammarAccess.getCallDefinitionRule()); } 
	 EOF 
;

// Rule CallDefinition
ruleCallDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallDefinitionAccess().getGroup()); }
(rule__CallDefinition__Group__0)
{ after(grammarAccess.getCallDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteDefinition
entryRuleSuiteDefinition 
:
{ before(grammarAccess.getSuiteDefinitionRule()); }
	 ruleSuiteDefinition
{ after(grammarAccess.getSuiteDefinitionRule()); } 
	 EOF 
;

// Rule SuiteDefinition
ruleSuiteDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup()); }
(rule__SuiteDefinition__Group__0)
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperationDefinition
entryRuleOperationDefinition 
:
{ before(grammarAccess.getOperationDefinitionRule()); }
	 ruleOperationDefinition
{ after(grammarAccess.getOperationDefinitionRule()); } 
	 EOF 
;

// Rule OperationDefinition
ruleOperationDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationDefinitionAccess().getGroup()); }
(rule__OperationDefinition__Group__0)
{ after(grammarAccess.getOperationDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteStatement
entryRuleSuiteStatement 
:
{ before(grammarAccess.getSuiteStatementRule()); }
	 ruleSuiteStatement
{ after(grammarAccess.getSuiteStatementRule()); } 
	 EOF 
;

// Rule SuiteStatement
ruleSuiteStatement
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteStatementAccess().getAlternatives()); }
(rule__SuiteStatement__Alternatives)
{ after(grammarAccess.getSuiteStatementAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteStatementWithResult
entryRuleSuiteStatementWithResult 
:
{ before(grammarAccess.getSuiteStatementWithResultRule()); }
	 ruleSuiteStatementWithResult
{ after(grammarAccess.getSuiteStatementWithResultRule()); } 
	 EOF 
;

// Rule SuiteStatementWithResult
ruleSuiteStatementWithResult
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getAlternatives()); }
(rule__SuiteStatementWithResult__Alternatives)
{ after(grammarAccess.getSuiteStatementWithResultAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableDefinition
entryRuleVariableDefinition 
:
{ before(grammarAccess.getVariableDefinitionRule()); }
	 ruleVariableDefinition
{ after(grammarAccess.getVariableDefinitionRule()); } 
	 EOF 
;

// Rule VariableDefinition
ruleVariableDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableDefinitionAccess().getGroup()); }
(rule__VariableDefinition__Group__0)
{ after(grammarAccess.getVariableDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleConstantDefinition
entryRuleConstantDefinition 
:
{ before(grammarAccess.getConstantDefinitionRule()); }
	 ruleConstantDefinition
{ after(grammarAccess.getConstantDefinitionRule()); } 
	 EOF 
;

// Rule ConstantDefinition
ruleConstantDefinition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup()); }
(rule__ConstantDefinition__Group__0)
{ after(grammarAccess.getConstantDefinitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariantValue
entryRuleVariantValue 
:
{ before(grammarAccess.getVariantValueRule()); }
	 ruleVariantValue
{ after(grammarAccess.getVariantValueRule()); } 
	 EOF 
;

// Rule VariantValue
ruleVariantValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariantValueAccess().getGroup()); }
(rule__VariantValue__Group__0)
{ after(grammarAccess.getVariantValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariableEntity
entryRuleVariableEntity 
:
{ before(grammarAccess.getVariableEntityRule()); }
	 ruleVariableEntity
{ after(grammarAccess.getVariableEntityRule()); } 
	 EOF 
;

// Rule VariableEntity
ruleVariableEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableEntityAccess().getNameAssignment()); }
(rule__VariableEntity__NameAssignment)
{ after(grammarAccess.getVariableEntityAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTest
entryRuleTest 
:
{ before(grammarAccess.getTestRule()); }
	 ruleTest
{ after(grammarAccess.getTestRule()); } 
	 EOF 
;

// Rule Test
ruleTest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTestAccess().getGroup()); }
(rule__Test__Group__0)
{ after(grammarAccess.getTestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTableTest
entryRuleTableTest 
:
{ before(grammarAccess.getTableTestRule()); }
	 ruleTableTest
{ after(grammarAccess.getTableTestRule()); } 
	 EOF 
;

// Rule TableTest
ruleTableTest
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableTestAccess().getGroup()); }
(rule__TableTest__Group__0)
{ after(grammarAccess.getTableTestAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTableTestRow
entryRuleTableTestRow 
:
{ before(grammarAccess.getTableTestRowRule()); }
	 ruleTableTestRow
{ after(grammarAccess.getTableTestRowRule()); } 
	 EOF 
;

// Rule TableTestRow
ruleTableTestRow
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTableTestRowAccess().getGroup()); }
(rule__TableTestRow__Group__0)
{ after(grammarAccess.getTableTestRowAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterTableHeader
entryRuleParameterTableHeader 
:
{ before(grammarAccess.getParameterTableHeaderRule()); }
	 ruleParameterTableHeader
{ after(grammarAccess.getParameterTableHeaderRule()); } 
	 EOF 
;

// Rule ParameterTableHeader
ruleParameterTableHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterTableHeaderAccess().getGroup()); }
(rule__ParameterTableHeader__Group__0)
{ after(grammarAccess.getParameterTableHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResultTableHeader
entryRuleResultTableHeader 
:
{ before(grammarAccess.getResultTableHeaderRule()); }
	 ruleResultTableHeader
{ after(grammarAccess.getResultTableHeaderRule()); } 
	 EOF 
;

// Rule ResultTableHeader
ruleResultTableHeader
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResultTableHeaderAccess().getGroup()); }
(rule__ResultTableHeader__Group__0)
{ after(grammarAccess.getResultTableHeaderAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterTableValue
entryRuleParameterTableValue 
:
{ before(grammarAccess.getParameterTableValueRule()); }
	 ruleParameterTableValue
{ after(grammarAccess.getParameterTableValueRule()); } 
	 EOF 
;

// Rule ParameterTableValue
ruleParameterTableValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterTableValueAccess().getGroup()); }
(rule__ParameterTableValue__Group__0)
{ after(grammarAccess.getParameterTableValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedResult
entryRuleNamedResult 
:
{ before(grammarAccess.getNamedResultRule()); }
	 ruleNamedResult
{ after(grammarAccess.getNamedResultRule()); } 
	 EOF 
;

// Rule NamedResult
ruleNamedResult
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedResultAccess().getGroup()); }
(rule__NamedResult__Group__0)
{ after(grammarAccess.getNamedResultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleResultName
entryRuleResultName 
:
{ before(grammarAccess.getResultNameRule()); }
	 ruleResultName
{ after(grammarAccess.getResultNameRule()); } 
	 EOF 
;

// Rule ResultName
ruleResultName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getResultNameAccess().getAlternatives()); }
(rule__ResultName__Alternatives)
{ after(grammarAccess.getResultNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFixedResultName
entryRuleFixedResultName 
:
{ before(grammarAccess.getFixedResultNameRule()); }
	 ruleFixedResultName
{ after(grammarAccess.getFixedResultNameRule()); } 
	 EOF 
;

// Rule FixedResultName
ruleFixedResultName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFixedResultNameAccess().getFieldAssignment()); }
(rule__FixedResultName__FieldAssignment)
{ after(grammarAccess.getFixedResultNameAccess().getFieldAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCall
entryRuleCall 
:
{ before(grammarAccess.getCallRule()); }
	 ruleCall
{ after(grammarAccess.getCallRule()); } 
	 EOF 
;

// Rule Call
ruleCall
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCallAccess().getGroup()); }
(rule__Call__Group__0)
{ after(grammarAccess.getCallAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNamedCallResult
entryRuleNamedCallResult 
:
{ before(grammarAccess.getNamedCallResultRule()); }
	 ruleNamedCallResult
{ after(grammarAccess.getNamedCallResultRule()); } 
	 EOF 
;

// Rule NamedCallResult
ruleNamedCallResult
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNamedCallResultAccess().getGroup()); }
(rule__NamedCallResult__Group__0)
{ after(grammarAccess.getNamedCallResultAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuite
entryRuleSuite 
:
{ before(grammarAccess.getSuiteRule()); }
	 ruleSuite
{ after(grammarAccess.getSuiteRule()); } 
	 EOF 
;

// Rule Suite
ruleSuite
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteAccess().getGroup()); }
(rule__Suite__Group__0)
{ after(grammarAccess.getSuiteAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSuiteParameter
entryRuleSuiteParameter 
:
{ before(grammarAccess.getSuiteParameterRule()); }
	 ruleSuiteParameter
{ after(grammarAccess.getSuiteParameterRule()); } 
	 EOF 
;

// Rule SuiteParameter
ruleSuiteParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSuiteParameterAccess().getGroup()); }
(rule__SuiteParameter__Group__0)
{ after(grammarAccess.getSuiteParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameter
entryRuleParameter 
:
{ before(grammarAccess.getParameterRule()); }
	 ruleParameter
{ after(grammarAccess.getParameterRule()); } 
	 EOF 
;

// Rule Parameter
ruleParameter
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterAccess().getGroup()); }
(rule__Parameter__Group__0)
{ after(grammarAccess.getParameterAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParameterName
entryRuleParameterName 
:
{ before(grammarAccess.getParameterNameRule()); }
	 ruleParameterName
{ after(grammarAccess.getParameterNameRule()); } 
	 EOF 
;

// Rule ParameterName
ruleParameterName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParameterNameAccess().getAlternatives()); }
(rule__ParameterName__Alternatives)
{ after(grammarAccess.getParameterNameAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFixedParameterName
entryRuleFixedParameterName 
:
{ before(grammarAccess.getFixedParameterNameRule()); }
	 ruleFixedParameterName
{ after(grammarAccess.getFixedParameterNameRule()); } 
	 EOF 
;

// Rule FixedParameterName
ruleFixedParameterName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFixedParameterNameAccess().getAnnotationAssignment()); }
(rule__FixedParameterName__AnnotationAssignment)
{ after(grammarAccess.getFixedParameterNameAccess().getAnnotationAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArbitraryParameterOrResultName
entryRuleArbitraryParameterOrResultName 
:
{ before(grammarAccess.getArbitraryParameterOrResultNameRule()); }
	 ruleArbitraryParameterOrResultName
{ after(grammarAccess.getArbitraryParameterOrResultNameRule()); } 
	 EOF 
;

// Rule ArbitraryParameterOrResultName
ruleArbitraryParameterOrResultName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getGroup()); }
(rule__ArbitraryParameterOrResultName__Group__0)
{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOperation
entryRuleOperation 
:
{ before(grammarAccess.getOperationRule()); }
	 ruleOperation
{ after(grammarAccess.getOperationRule()); } 
	 EOF 
;

// Rule Operation
ruleOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOperationAccess().getAlternatives()); }
(rule__Operation__Alternatives)
{ after(grammarAccess.getOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStandardOperation
entryRuleStandardOperation 
:
{ before(grammarAccess.getStandardOperationRule()); }
	 ruleStandardOperation
{ after(grammarAccess.getStandardOperationRule()); } 
	 EOF 
;

// Rule StandardOperation
ruleStandardOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStandardOperationAccess().getGroup()); }
(rule__StandardOperation__Group__0)
{ after(grammarAccess.getStandardOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleCustomOperation
entryRuleCustomOperation 
:
{ before(grammarAccess.getCustomOperationRule()); }
	 ruleCustomOperation
{ after(grammarAccess.getCustomOperationRule()); } 
	 EOF 
;

// Rule CustomOperation
ruleCustomOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getCustomOperationAccess().getGroup()); }
(rule__CustomOperation__Group__0)
{ after(grammarAccess.getCustomOperationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueOrEnumValueOrOperationCollection
entryRuleValueOrEnumValueOrOperationCollection 
:
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionRule()); }
	 ruleValueOrEnumValueOrOperationCollection
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionRule()); } 
	 EOF 
;

// Rule ValueOrEnumValueOrOperationCollection
ruleValueOrEnumValueOrOperationCollection
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getGroup()); }
(rule__ValueOrEnumValueOrOperationCollection__Group__0)
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValueOrEnumValueOrOperation
entryRuleValueOrEnumValueOrOperation 
:
{ before(grammarAccess.getValueOrEnumValueOrOperationRule()); }
	 ruleValueOrEnumValueOrOperation
{ after(grammarAccess.getValueOrEnumValueOrOperationRule()); } 
	 EOF 
;

// Rule ValueOrEnumValueOrOperation
ruleValueOrEnumValueOrOperation
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationAccess().getAlternatives()); }
(rule__ValueOrEnumValueOrOperation__Alternatives)
{ after(grammarAccess.getValueOrEnumValueOrOperationAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStaticValue
entryRuleStaticValue 
:
{ before(grammarAccess.getStaticValueRule()); }
	 ruleStaticValue
{ after(grammarAccess.getStaticValueRule()); } 
	 EOF 
;

// Rule StaticValue
ruleStaticValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStaticValueAccess().getAlternatives()); }
(rule__StaticValue__Alternatives)
{ after(grammarAccess.getStaticValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIntegerValue
entryRuleIntegerValue 
:
{ before(grammarAccess.getIntegerValueRule()); }
	 ruleIntegerValue
{ after(grammarAccess.getIntegerValueRule()); } 
	 EOF 
;

// Rule IntegerValue
ruleIntegerValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIntegerValueAccess().getIntegerValueAssignment()); }
(rule__IntegerValue__IntegerValueAssignment)
{ after(grammarAccess.getIntegerValueAccess().getIntegerValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDecimalValue
entryRuleDecimalValue 
:
{ before(grammarAccess.getDecimalValueRule()); }
	 ruleDecimalValue
{ after(grammarAccess.getDecimalValueRule()); } 
	 EOF 
;

// Rule DecimalValue
ruleDecimalValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDecimalValueAccess().getDecimalValueAssignment()); }
(rule__DecimalValue__DecimalValueAssignment)
{ after(grammarAccess.getDecimalValueAccess().getDecimalValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getStringValueAssignment()); }
(rule__StringValue__StringValueAssignment)
{ after(grammarAccess.getStringValueAccess().getStringValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanValue
entryRuleBooleanValue 
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValueAccess().getBooleanValueAssignment()); }
(rule__BooleanValue__BooleanValueAssignment)
{ after(grammarAccess.getBooleanValueAccess().getBooleanValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateValue
entryRuleDateValue 
:
{ before(grammarAccess.getDateValueRule()); }
	 ruleDateValue
{ after(grammarAccess.getDateValueRule()); } 
	 EOF 
;

// Rule DateValue
ruleDateValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateValueAccess().getAlternatives()); }
(rule__DateValue__Alternatives)
{ after(grammarAccess.getDateValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsoDateValue
entryRuleIsoDateValue 
:
{ before(grammarAccess.getIsoDateValueRule()); }
	 ruleIsoDateValue
{ after(grammarAccess.getIsoDateValueRule()); } 
	 EOF 
;

// Rule IsoDateValue
ruleIsoDateValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsoDateValueAccess().getDateValueAssignment()); }
(rule__IsoDateValue__DateValueAssignment)
{ after(grammarAccess.getIsoDateValueAccess().getDateValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEuropeanDateValue
entryRuleEuropeanDateValue 
:
{ before(grammarAccess.getEuropeanDateValueRule()); }
	 ruleEuropeanDateValue
{ after(grammarAccess.getEuropeanDateValueRule()); } 
	 EOF 
;

// Rule EuropeanDateValue
ruleEuropeanDateValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEuropeanDateValueAccess().getDateValueAssignment()); }
(rule__EuropeanDateValue__DateValueAssignment)
{ after(grammarAccess.getEuropeanDateValueAccess().getDateValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUSDateValue
entryRuleUSDateValue 
:
{ before(grammarAccess.getUSDateValueRule()); }
	 ruleUSDateValue
{ after(grammarAccess.getUSDateValueRule()); } 
	 EOF 
;

// Rule USDateValue
ruleUSDateValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUSDateValueAccess().getDateValueAssignment()); }
(rule__USDateValue__DateValueAssignment)
{ after(grammarAccess.getUSDateValueAccess().getDateValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeValue
entryRuleTimeValue 
:
{ before(grammarAccess.getTimeValueRule()); }
	 ruleTimeValue
{ after(grammarAccess.getTimeValueRule()); } 
	 EOF 
;

// Rule TimeValue
ruleTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeValueAccess().getAlternatives()); }
(rule__TimeValue__Alternatives)
{ after(grammarAccess.getTimeValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsoTimeValue
entryRuleIsoTimeValue 
:
{ before(grammarAccess.getIsoTimeValueRule()); }
	 ruleIsoTimeValue
{ after(grammarAccess.getIsoTimeValueRule()); } 
	 EOF 
;

// Rule IsoTimeValue
ruleIsoTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsoTimeValueAccess().getTimeValueAssignment()); }
(rule__IsoTimeValue__TimeValueAssignment)
{ after(grammarAccess.getIsoTimeValueAccess().getTimeValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimple24HrsTimeValue
entryRuleSimple24HrsTimeValue 
:
{ before(grammarAccess.getSimple24HrsTimeValueRule()); }
	 ruleSimple24HrsTimeValue
{ after(grammarAccess.getSimple24HrsTimeValueRule()); } 
	 EOF 
;

// Rule Simple24HrsTimeValue
ruleSimple24HrsTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple24HrsTimeValueAccess().getTimeValueAssignment()); }
(rule__Simple24HrsTimeValue__TimeValueAssignment)
{ after(grammarAccess.getSimple24HrsTimeValueAccess().getTimeValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSimple12HrsTimeValue
entryRuleSimple12HrsTimeValue 
:
{ before(grammarAccess.getSimple12HrsTimeValueRule()); }
	 ruleSimple12HrsTimeValue
{ after(grammarAccess.getSimple12HrsTimeValueRule()); } 
	 EOF 
;

// Rule Simple12HrsTimeValue
ruleSimple12HrsTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSimple12HrsTimeValueAccess().getTimeValueAssignment()); }
(rule__Simple12HrsTimeValue__TimeValueAssignment)
{ after(grammarAccess.getSimple12HrsTimeValueAccess().getTimeValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDateAndTimeValue
entryRuleDateAndTimeValue 
:
{ before(grammarAccess.getDateAndTimeValueRule()); }
	 ruleDateAndTimeValue
{ after(grammarAccess.getDateAndTimeValueRule()); } 
	 EOF 
;

// Rule DateAndTimeValue
ruleDateAndTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDateAndTimeValueAccess().getAlternatives()); }
(rule__DateAndTimeValue__Alternatives)
{ after(grammarAccess.getDateAndTimeValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleIsoDateAndTimeValue
entryRuleIsoDateAndTimeValue 
:
{ before(grammarAccess.getIsoDateAndTimeValueRule()); }
	 ruleIsoDateAndTimeValue
{ after(grammarAccess.getIsoDateAndTimeValueRule()); } 
	 EOF 
;

// Rule IsoDateAndTimeValue
ruleIsoDateAndTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIsoDateAndTimeValueAccess().getGroup()); }
(rule__IsoDateAndTimeValue__Group__0)
{ after(grammarAccess.getIsoDateAndTimeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEuropeanDateAnd24HrsTimeValue
entryRuleEuropeanDateAnd24HrsTimeValue 
:
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueRule()); }
	 ruleEuropeanDateAnd24HrsTimeValue
{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueRule()); } 
	 EOF 
;

// Rule EuropeanDateAnd24HrsTimeValue
ruleEuropeanDateAnd24HrsTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getGroup()); }
(rule__EuropeanDateAnd24HrsTimeValue__Group__0)
{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEuropeanDateAnd12HrsTimeValue
entryRuleEuropeanDateAnd12HrsTimeValue 
:
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueRule()); }
	 ruleEuropeanDateAnd12HrsTimeValue
{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueRule()); } 
	 EOF 
;

// Rule EuropeanDateAnd12HrsTimeValue
ruleEuropeanDateAnd12HrsTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getGroup()); }
(rule__EuropeanDateAnd12HrsTimeValue__Group__0)
{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleUSDateAnd12HrsTimeValue
entryRuleUSDateAnd12HrsTimeValue 
:
{ before(grammarAccess.getUSDateAnd12HrsTimeValueRule()); }
	 ruleUSDateAnd12HrsTimeValue
{ after(grammarAccess.getUSDateAnd12HrsTimeValueRule()); } 
	 EOF 
;

// Rule USDateAnd12HrsTimeValue
ruleUSDateAnd12HrsTimeValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getGroup()); }
(rule__USDateAnd12HrsTimeValue__Group__0)
{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleVariable
entryRuleVariable 
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getVariableAccess().getNameAssignment()); }
(rule__Variable__NameAssignment)
{ after(grammarAccess.getVariableAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullValue
entryRuleNullValue 
:
{ before(grammarAccess.getNullValueRule()); }
	 ruleNullValue
{ after(grammarAccess.getNullValueRule()); } 
	 EOF 
;

// Rule NullValue
ruleNullValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullValueAccess().getGroup()); }
(rule__NullValue__Group__0)
{ after(grammarAccess.getNullValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumValue
entryRuleEnumValue 
:
{ before(grammarAccess.getEnumValueRule()); }
	 ruleEnumValue
{ after(grammarAccess.getEnumValueRule()); } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumValueAccess().getEnumValueAssignment()); }
(rule__EnumValue__EnumValueAssignment)
{ after(grammarAccess.getEnumValueAccess().getEnumValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNestedObject
entryRuleNestedObject 
:
{ before(grammarAccess.getNestedObjectRule()); }
	 ruleNestedObject
{ after(grammarAccess.getNestedObjectRule()); } 
	 EOF 
;

// Rule NestedObject
ruleNestedObject
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNestedObjectAccess().getGroup()); }
(rule__NestedObject__Group__0)
{ after(grammarAccess.getNestedObjectAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleKeyValuePair
entryRuleKeyValuePair 
:
{ before(grammarAccess.getKeyValuePairRule()); }
	 ruleKeyValuePair
{ after(grammarAccess.getKeyValuePairRule()); } 
	 EOF 
;

// Rule KeyValuePair
ruleKeyValuePair
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getKeyValuePairAccess().getGroup()); }
(rule__KeyValuePair__Group__0)
{ after(grammarAccess.getKeyValuePairAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleJavaClassReference
entryRuleJavaClassReference 
:
{ before(grammarAccess.getJavaClassReferenceRule()); }
	 ruleJavaClassReference
{ after(grammarAccess.getJavaClassReferenceRule()); } 
	 EOF 
;

// Rule JavaClassReference
ruleJavaClassReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getJavaClassReferenceAccess().getTypeAssignment()); }
(rule__JavaClassReference__TypeAssignment)
{ after(grammarAccess.getJavaClassReferenceAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMethodReference
entryRuleMethodReference 
:
{ before(grammarAccess.getMethodReferenceRule()); }
	 ruleMethodReference
{ after(grammarAccess.getMethodReferenceRule()); } 
	 EOF 
;

// Rule MethodReference
ruleMethodReference
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMethodReferenceAccess().getGroup()); }
(rule__MethodReference__Group__0)
{ after(grammarAccess.getMethodReferenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleExecutionMultiplier
entryRuleExecutionMultiplier 
:
{ before(grammarAccess.getExecutionMultiplierRule()); }
	 ruleExecutionMultiplier
{ after(grammarAccess.getExecutionMultiplierRule()); } 
	 EOF 
;

// Rule ExecutionMultiplier
ruleExecutionMultiplier
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getExecutionMultiplierAccess().getGroup()); }
(rule__ExecutionMultiplier__Group__0)
{ after(grammarAccess.getExecutionMultiplierAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedName
entryRuleQualifiedName 
:
{ before(grammarAccess.getQualifiedNameRule()); }
	 ruleQualifiedName
{ after(grammarAccess.getQualifiedNameRule()); } 
	 EOF 
;

// Rule QualifiedName
ruleQualifiedName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup()); }
(rule__QualifiedName__Group__0)
{ after(grammarAccess.getQualifiedNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedJavaClassName
entryRuleQualifiedJavaClassName 
:
{ before(grammarAccess.getQualifiedJavaClassNameRule()); }
	 ruleQualifiedJavaClassName
{ after(grammarAccess.getQualifiedJavaClassNameRule()); } 
	 EOF 
;

// Rule QualifiedJavaClassName
ruleQualifiedJavaClassName
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedJavaClassNameAccess().getGroup()); }
(rule__QualifiedJavaClassName__Group__0)
{ after(grammarAccess.getQualifiedJavaClassNameAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleQualifiedNameWithWildcard
entryRuleQualifiedNameWithWildcard 
:
{ before(grammarAccess.getQualifiedNameWithWildcardRule()); }
	 ruleQualifiedNameWithWildcard
{ after(grammarAccess.getQualifiedNameWithWildcardRule()); } 
	 EOF 
;

// Rule QualifiedNameWithWildcard
ruleQualifiedNameWithWildcard
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
(rule__QualifiedNameWithWildcard__Group__0)
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNL
entryRuleNL 
:
{ before(grammarAccess.getNLRule()); }
	 ruleNL
{ after(grammarAccess.getNLRule()); } 
	 EOF 
;

// Rule NL
ruleNL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNLAccess().getGroup()); }
(rule__NL__Group__0)*
{ after(grammarAccess.getNLAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNLFORCED
entryRuleNLFORCED 
:
{ before(grammarAccess.getNLFORCEDRule()); }
	 ruleNLFORCED
{ after(grammarAccess.getNLFORCEDRule()); } 
	 EOF 
;

// Rule NLFORCED
ruleNLFORCED
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNLFORCEDAccess().getGroup()); }
(rule__NLFORCED__Group__0)
{ after(grammarAccess.getNLFORCEDAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Statement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatementAccess().getImportParserRuleCall_0()); }
	ruleImport
{ after(grammarAccess.getStatementAccess().getImportParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getPackageDefinitionParserRuleCall_1()); }
	rulePackageDefinition
{ after(grammarAccess.getStatementAccess().getPackageDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getForkDefinitionParserRuleCall_2()); }
	ruleForkDefinition
{ after(grammarAccess.getStatementAccess().getForkDefinitionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStatementAccess().getVariantDefinitionParserRuleCall_3()); }
	ruleVariantDefinition
{ after(grammarAccess.getStatementAccess().getVariantDefinitionParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleComment__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleCommentAccess().getVisibleSingleLineCommentParserRuleCall_0()); }
	ruleVisibleSingleLineComment
{ after(grammarAccess.getVisibleCommentAccess().getVisibleSingleLineCommentParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getVisibleCommentAccess().getVisibleMultiLineCommentParserRuleCall_1()); }
	ruleVisibleMultiLineComment
{ after(grammarAccess.getVisibleCommentAccess().getVisibleMultiLineCommentParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageStatementAccess().getImportParserRuleCall_0()); }
	ruleImport
{ after(grammarAccess.getPackageStatementAccess().getImportParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getForkDefinitionParserRuleCall_1()); }
	ruleForkDefinition
{ after(grammarAccess.getPackageStatementAccess().getForkDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getVariantDefinitionParserRuleCall_2()); }
	ruleVariantDefinition
{ after(grammarAccess.getPackageStatementAccess().getVariantDefinitionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getTestDefinitionParserRuleCall_3()); }
	ruleTestDefinition
{ after(grammarAccess.getPackageStatementAccess().getTestDefinitionParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getCallDefinitionParserRuleCall_4()); }
	ruleCallDefinition
{ after(grammarAccess.getPackageStatementAccess().getCallDefinitionParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getOperationDefinitionParserRuleCall_5()); }
	ruleOperationDefinition
{ after(grammarAccess.getPackageStatementAccess().getOperationDefinitionParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getSuiteDefinitionParserRuleCall_6()); }
	ruleSuiteDefinition
{ after(grammarAccess.getPackageStatementAccess().getSuiteDefinitionParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getVariableDefinitionParserRuleCall_7()); }
	ruleVariableDefinition
{ after(grammarAccess.getPackageStatementAccess().getVariableDefinitionParserRuleCall_7()); }
)

    |(
{ before(grammarAccess.getPackageStatementAccess().getConstantDefinitionParserRuleCall_8()); }
	ruleConstantDefinition
{ after(grammarAccess.getPackageStatementAccess().getConstantDefinitionParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteStatement__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteStatementAccess().getSuiteStatementWithResultParserRuleCall_0()); }
	ruleSuiteStatementWithResult
{ after(grammarAccess.getSuiteStatementAccess().getSuiteStatementWithResultParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSuiteStatementAccess().getVariableDefinitionParserRuleCall_1()); }
	ruleVariableDefinition
{ after(grammarAccess.getSuiteStatementAccess().getVariableDefinitionParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSuiteStatementAccess().getConstantDefinitionParserRuleCall_2()); }
	ruleConstantDefinition
{ after(grammarAccess.getSuiteStatementAccess().getConstantDefinitionParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSuiteStatementAccess().getVisibleCommentParserRuleCall_3()); }
	ruleVisibleComment
{ after(grammarAccess.getSuiteStatementAccess().getVisibleCommentParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getSuiteStatementAccess().getVisibleDividerParserRuleCall_4()); }
	ruleVisibleDivider
{ after(grammarAccess.getSuiteStatementAccess().getVisibleDividerParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteStatementWithResult__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getSuiteParserRuleCall_0()); }
	ruleSuite
{ after(grammarAccess.getSuiteStatementWithResultAccess().getSuiteParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getTestParserRuleCall_1()); }
	ruleTest
{ after(grammarAccess.getSuiteStatementWithResultAccess().getTestParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getTableTestParserRuleCall_2()); }
	ruleTableTest
{ after(grammarAccess.getSuiteStatementWithResultAccess().getTableTestParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getSuiteStatementWithResultAccess().getCallParserRuleCall_3()); }
	ruleCall
{ after(grammarAccess.getSuiteStatementWithResultAccess().getCallParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultNameAccess().getFixedResultNameParserRuleCall_0()); }
	ruleFixedResultName
{ after(grammarAccess.getResultNameAccess().getFixedResultNameParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getResultNameAccess().getArbitraryParameterOrResultNameParserRuleCall_1()); }
	ruleArbitraryParameterOrResultName
{ after(grammarAccess.getResultNameAccess().getArbitraryParameterOrResultNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterName__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterNameAccess().getFixedParameterNameParserRuleCall_0()); }
	ruleFixedParameterName
{ after(grammarAccess.getParameterNameAccess().getFixedParameterNameParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getParameterNameAccess().getArbitraryParameterOrResultNameParserRuleCall_1()); }
	ruleArbitraryParameterOrResultName
{ after(grammarAccess.getParameterNameAccess().getArbitraryParameterOrResultNameParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Operation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationAccess().getStandardOperationParserRuleCall_0()); }
	ruleStandardOperation
{ after(grammarAccess.getOperationAccess().getStandardOperationParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getOperationAccess().getCustomOperationParserRuleCall_1()); }
	ruleCustomOperation
{ after(grammarAccess.getOperationAccess().getCustomOperationParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperation__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationAccess().getValueParserRuleCall_0()); }
	ruleValue
{ after(grammarAccess.getValueOrEnumValueOrOperationAccess().getValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueOrEnumValueOrOperationAccess().getEnumValueParserRuleCall_1()); }
	ruleEnumValue
{ after(grammarAccess.getValueOrEnumValueOrOperationAccess().getEnumValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueOrEnumValueOrOperationAccess().getOperationParserRuleCall_2()); }
	ruleOperation
{ after(grammarAccess.getValueOrEnumValueOrOperationAccess().getOperationParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getStaticValueParserRuleCall_0()); }
	ruleStaticValue
{ after(grammarAccess.getValueAccess().getStaticValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getVariableParserRuleCall_1()); }
	ruleVariable
{ after(grammarAccess.getValueAccess().getVariableParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getNestedObjectParserRuleCall_2()); }
	ruleNestedObject
{ after(grammarAccess.getValueAccess().getNestedObjectParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StaticValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStaticValueAccess().getStringValueParserRuleCall_0()); }
	ruleStringValue
{ after(grammarAccess.getStaticValueAccess().getStringValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getIntegerValueParserRuleCall_1()); }
	ruleIntegerValue
{ after(grammarAccess.getStaticValueAccess().getIntegerValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getDecimalValueParserRuleCall_2()); }
	ruleDecimalValue
{ after(grammarAccess.getStaticValueAccess().getDecimalValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getBooleanValueParserRuleCall_3()); }
	ruleBooleanValue
{ after(grammarAccess.getStaticValueAccess().getBooleanValueParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getDateValueParserRuleCall_4()); }
	ruleDateValue
{ after(grammarAccess.getStaticValueAccess().getDateValueParserRuleCall_4()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getTimeValueParserRuleCall_5()); }
	ruleTimeValue
{ after(grammarAccess.getStaticValueAccess().getTimeValueParserRuleCall_5()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getDateAndTimeValueParserRuleCall_6()); }
	ruleDateAndTimeValue
{ after(grammarAccess.getStaticValueAccess().getDateAndTimeValueParserRuleCall_6()); }
)

    |(
{ before(grammarAccess.getStaticValueAccess().getNullValueParserRuleCall_7()); }
	ruleNullValue
{ after(grammarAccess.getStaticValueAccess().getNullValueParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__BooleanValueAlternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getBooleanValueBOOLEAN_TRUETerminalRuleCall_0_0()); }
	RULE_BOOLEAN_TRUE
{ after(grammarAccess.getBooleanValueAccess().getBooleanValueBOOLEAN_TRUETerminalRuleCall_0_0()); }
)

    |(
{ before(grammarAccess.getBooleanValueAccess().getBooleanValueBOOLEAN_FALSETerminalRuleCall_0_1()); }
	RULE_BOOLEAN_FALSE
{ after(grammarAccess.getBooleanValueAccess().getBooleanValueBOOLEAN_FALSETerminalRuleCall_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateValueAccess().getIsoDateValueParserRuleCall_0()); }
	ruleIsoDateValue
{ after(grammarAccess.getDateValueAccess().getIsoDateValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDateValueAccess().getEuropeanDateValueParserRuleCall_1()); }
	ruleEuropeanDateValue
{ after(grammarAccess.getDateValueAccess().getEuropeanDateValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDateValueAccess().getUSDateValueParserRuleCall_2()); }
	ruleUSDateValue
{ after(grammarAccess.getDateValueAccess().getUSDateValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TimeValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeValueAccess().getIsoTimeValueParserRuleCall_0()); }
	ruleIsoTimeValue
{ after(grammarAccess.getTimeValueAccess().getIsoTimeValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getTimeValueAccess().getSimple24HrsTimeValueParserRuleCall_1()); }
	ruleSimple24HrsTimeValue
{ after(grammarAccess.getTimeValueAccess().getSimple24HrsTimeValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getTimeValueAccess().getSimple12HrsTimeValueParserRuleCall_2()); }
	ruleSimple12HrsTimeValue
{ after(grammarAccess.getTimeValueAccess().getSimple12HrsTimeValueParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DateAndTimeValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDateAndTimeValueAccess().getIsoDateAndTimeValueParserRuleCall_0()); }
	ruleIsoDateAndTimeValue
{ after(grammarAccess.getDateAndTimeValueAccess().getIsoDateAndTimeValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getDateAndTimeValueAccess().getEuropeanDateAnd24HrsTimeValueParserRuleCall_1()); }
	ruleEuropeanDateAnd24HrsTimeValue
{ after(grammarAccess.getDateAndTimeValueAccess().getEuropeanDateAnd24HrsTimeValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getDateAndTimeValueAccess().getEuropeanDateAnd12HrsTimeValueParserRuleCall_2()); }
	ruleEuropeanDateAnd12HrsTimeValue
{ after(grammarAccess.getDateAndTimeValueAccess().getEuropeanDateAnd12HrsTimeValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getDateAndTimeValueAccess().getUSDateAnd12HrsTimeValueParserRuleCall_3()); }
	ruleUSDateAnd12HrsTimeValue
{ after(grammarAccess.getDateAndTimeValueAccess().getUSDateAnd12HrsTimeValueParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Model__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__0__Impl
	rule__Model__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getModelAction_0()); }
(

)
{ after(grammarAccess.getModelAccess().getModelAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__1__Impl
	rule__Model__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getModelAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Model__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Model__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Model__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsAssignment_2()); }
(rule__Model__StatementsAssignment_2)*
{ after(grammarAccess.getModelAccess().getStatementsAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__VisibleSingleLineComment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleSingleLineComment__Group__0__Impl
	rule__VisibleSingleLineComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleSingleLineComment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleSingleLineCommentAccess().getContentAssignment_0()); }
(rule__VisibleSingleLineComment__ContentAssignment_0)
{ after(grammarAccess.getVisibleSingleLineCommentAccess().getContentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VisibleSingleLineComment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleSingleLineComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleSingleLineComment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleSingleLineCommentAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVisibleSingleLineCommentAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VisibleMultiLineComment__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleMultiLineComment__Group__0__Impl
	rule__VisibleMultiLineComment__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleMultiLineComment__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleMultiLineCommentAccess().getContentAssignment_0()); }
(rule__VisibleMultiLineComment__ContentAssignment_0)
{ after(grammarAccess.getVisibleMultiLineCommentAccess().getContentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VisibleMultiLineComment__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleMultiLineComment__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleMultiLineComment__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleMultiLineCommentAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVisibleMultiLineCommentAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VisibleDivider__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleDivider__Group__0__Impl
	rule__VisibleDivider__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleDivider__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleDividerAccess().getContentAssignment_0()); }
(rule__VisibleDivider__ContentAssignment_0)
{ after(grammarAccess.getVisibleDividerAccess().getContentAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VisibleDivider__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VisibleDivider__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleDivider__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleDividerAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVisibleDividerAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__PackageDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__0__Impl
	rule__PackageDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getPackagedefKeyword_0()); }

	'packagedef' 

{ after(grammarAccess.getPackageDefinitionAccess().getPackagedefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__1__Impl
	rule__PackageDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__2__Impl
	rule__PackageDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNameAssignment_2()); }
(rule__PackageDefinition__NameAssignment_2)
{ after(grammarAccess.getPackageDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__3__Impl
	rule__PackageDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getWithKeyword_3()); }

	'with' 

{ after(grammarAccess.getPackageDefinitionAccess().getWithKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__4__Impl
	rule__PackageDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_4()); }
	ruleNL
{ after(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__5__Impl
	rule__PackageDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getStatementsAssignment_5()); }
(rule__PackageDefinition__StatementsAssignment_5)*
{ after(grammarAccess.getPackageDefinitionAccess().getStatementsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__6__Impl
	rule__PackageDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getPackageendKeyword_6()); }

	'packageend' 

{ after(grammarAccess.getPackageDefinitionAccess().getPackageendKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__PackageDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__PackageDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_7()); }
	ruleNL
{ after(grammarAccess.getPackageDefinitionAccess().getNLParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getImportAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceAssignment_2()); }
(rule__Import__ImportedNamespaceAssignment_2)
{ after(grammarAccess.getImportAccess().getImportedNamespaceAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getImportAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ForkDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__0__Impl
	rule__ForkDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getForkdefKeyword_0()); }

	'forkdef' 

{ after(grammarAccess.getForkDefinitionAccess().getForkdefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__1__Impl
	rule__ForkDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__2__Impl
	rule__ForkDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNameAssignment_2()); }
(rule__ForkDefinition__NameAssignment_2)
{ after(grammarAccess.getForkDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__3__Impl
	rule__ForkDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__4__Impl
	rule__ForkDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getGroup_4()); }
(rule__ForkDefinition__Group_4__0)?
{ after(grammarAccess.getForkDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__5__Impl
	rule__ForkDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getGroup_5()); }
(rule__ForkDefinition__Group_5__0)?
{ after(grammarAccess.getForkDefinitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getGroup_6()); }
(rule__ForkDefinition__Group_6__0)*
{ after(grammarAccess.getForkDefinitionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__ForkDefinition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_4__0__Impl
	rule__ForkDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getDescriptionAssignment_4_0()); }
(rule__ForkDefinition__DescriptionAssignment_4_0)
{ after(grammarAccess.getForkDefinitionAccess().getDescriptionAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_4_1()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForkDefinition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_5__0__Impl
	rule__ForkDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getUsesKeyword_5_0()); }

	'uses' 

{ after(grammarAccess.getForkDefinitionAccess().getUsesKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_5__1__Impl
	rule__ForkDefinition__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_5_1()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_5__2__Impl
	rule__ForkDefinition__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getForkerClassAssignment_5_2()); }
(rule__ForkDefinition__ForkerClassAssignment_5_2)
{ after(grammarAccess.getForkDefinitionAccess().getForkerClassAssignment_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_5_3()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ForkDefinition__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_6__0__Impl
	rule__ForkDefinition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getParametersAssignment_6_0()); }
(rule__ForkDefinition__ParametersAssignment_6_0)
{ after(grammarAccess.getForkDefinitionAccess().getParametersAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkDefinition__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkDefinition__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_6_1()); }
	ruleNL
{ after(grammarAccess.getForkDefinitionAccess().getNLParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ForkParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkParameter__Group__0__Impl
	rule__ForkParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getNameAssignment_0()); }
(rule__ForkParameter__NameAssignment_0)
{ after(grammarAccess.getForkParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkParameter__Group__1__Impl
	rule__ForkParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getForkParameterAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkParameter__Group__2__Impl
	rule__ForkParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getForkParameterAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkParameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkParameter__Group__3__Impl
	rule__ForkParameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getForkParameterAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ForkParameter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ForkParameter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getValueAssignment_4()); }
(rule__ForkParameter__ValueAssignment_4)
{ after(grammarAccess.getForkParameterAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VariantDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__0__Impl
	rule__VariantDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getVariantdefKeyword_0()); }

	'variantdef' 

{ after(grammarAccess.getVariantDefinitionAccess().getVariantdefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__1__Impl
	rule__VariantDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__2__Impl
	rule__VariantDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getNameAssignment_2()); }
(rule__VariantDefinition__NameAssignment_2)
{ after(grammarAccess.getVariantDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__3__Impl
	rule__VariantDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getGroup_4()); }
(rule__VariantDefinition__Group_4__0)?
{ after(grammarAccess.getVariantDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VariantDefinition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group_4__0__Impl
	rule__VariantDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getDescriptionAssignment_4_0()); }
(rule__VariantDefinition__DescriptionAssignment_4_0)
{ after(grammarAccess.getVariantDefinitionAccess().getDescriptionAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantDefinition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_4_1()); }
	ruleNL
{ after(grammarAccess.getVariantDefinitionAccess().getNLParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TestDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__0__Impl
	rule__TestDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getTestdefKeyword_0()); }

	'testdef' 

{ after(grammarAccess.getTestDefinitionAccess().getTestdefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__1__Impl
	rule__TestDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__2__Impl
	rule__TestDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNameAssignment_2()); }
(rule__TestDefinition__NameAssignment_2)
{ after(grammarAccess.getTestDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__3__Impl
	rule__TestDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__4__Impl
	rule__TestDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getUsesKeyword_4()); }

	'uses' 

{ after(grammarAccess.getTestDefinitionAccess().getUsesKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__5__Impl
	rule__TestDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__6__Impl
	rule__TestDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getFixtureMethodAssignment_6()); }
(rule__TestDefinition__FixtureMethodAssignment_6)
{ after(grammarAccess.getTestDefinitionAccess().getFixtureMethodAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TestDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TestDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_7()); }
	ruleNL
{ after(grammarAccess.getTestDefinitionAccess().getNLParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__CallDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__0__Impl
	rule__CallDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getCalldefKeyword_0()); }

	'calldef' 

{ after(grammarAccess.getCallDefinitionAccess().getCalldefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__1__Impl
	rule__CallDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__2__Impl
	rule__CallDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNameAssignment_2()); }
(rule__CallDefinition__NameAssignment_2)
{ after(grammarAccess.getCallDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__3__Impl
	rule__CallDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__4__Impl
	rule__CallDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getUsesKeyword_4()); }

	'uses' 

{ after(grammarAccess.getCallDefinitionAccess().getUsesKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__5__Impl
	rule__CallDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__6__Impl
	rule__CallDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getFixtureMethodAssignment_6()); }
(rule__CallDefinition__FixtureMethodAssignment_6)
{ after(grammarAccess.getCallDefinitionAccess().getFixtureMethodAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CallDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CallDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_7()); }
	ruleNL
{ after(grammarAccess.getCallDefinitionAccess().getNLParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__SuiteDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__0__Impl
	rule__SuiteDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getSuitedefKeyword_0()); }

	'suitedef' 

{ after(grammarAccess.getSuiteDefinitionAccess().getSuitedefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__1__Impl
	rule__SuiteDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__2__Impl
	rule__SuiteDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNameAssignment_2()); }
(rule__SuiteDefinition__NameAssignment_2)
{ after(grammarAccess.getSuiteDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__3__Impl
	rule__SuiteDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__4__Impl
	rule__SuiteDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_4()); }
(rule__SuiteDefinition__Group_4__0)?
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__5__Impl
	rule__SuiteDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_5()); }
(rule__SuiteDefinition__Group_5__0)?
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__6__Impl
	rule__SuiteDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_6()); }
(rule__SuiteDefinition__Group_6__0)?
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__7__Impl
	rule__SuiteDefinition__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getWithKeyword_7()); }

	'with' 

{ after(grammarAccess.getSuiteDefinitionAccess().getWithKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__8__Impl
	rule__SuiteDefinition__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_8()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__9__Impl
	rule__SuiteDefinition__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getStatementsAssignment_9()); }
(rule__SuiteDefinition__StatementsAssignment_9)*
{ after(grammarAccess.getSuiteDefinitionAccess().getStatementsAssignment_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__10__Impl
	rule__SuiteDefinition__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getSuiteendKeyword_10()); }

	'suiteend' 

{ after(grammarAccess.getSuiteDefinitionAccess().getSuiteendKeyword_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_11()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__SuiteDefinition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_4__0__Impl
	rule__SuiteDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGetsKeyword_4_0()); }

	'gets' 

{ after(grammarAccess.getSuiteDefinitionAccess().getGetsKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_4__1__Impl
	rule__SuiteDefinition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_4_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_4_2()); }
(rule__SuiteDefinition__Group_4_2__0)*
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SuiteDefinition__Group_4_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_4_2__0__Impl
	rule__SuiteDefinition__Group_4_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_4_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getParametersAssignment_4_2_0()); }
(rule__SuiteDefinition__ParametersAssignment_4_2_0)
{ after(grammarAccess.getSuiteDefinitionAccess().getParametersAssignment_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_4_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_4_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_4_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_4_2_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_4_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuiteDefinition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_5__0__Impl
	rule__SuiteDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getRequiresKeyword_5_0()); }

	'requires' 

{ after(grammarAccess.getSuiteDefinitionAccess().getRequiresKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_5__1__Impl
	rule__SuiteDefinition__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_5_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_5_2()); }
(rule__SuiteDefinition__Group_5_2__0)*
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SuiteDefinition__Group_5_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_5_2__0__Impl
	rule__SuiteDefinition__Group_5_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_5_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getDependenciesAssignment_5_2_0()); }
(rule__SuiteDefinition__DependenciesAssignment_5_2_0)
{ after(grammarAccess.getSuiteDefinitionAccess().getDependenciesAssignment_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_5_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_5_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_5_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_5_2_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_5_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuiteDefinition__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_6__0__Impl
	rule__SuiteDefinition__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getConcludedbyKeyword_6_0()); }

	'concludedby' 

{ after(grammarAccess.getSuiteDefinitionAccess().getConcludedbyKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_6__1__Impl
	rule__SuiteDefinition__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_6_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getGroup_6_2()); }
(rule__SuiteDefinition__Group_6_2__0)*
{ after(grammarAccess.getSuiteDefinitionAccess().getGroup_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__SuiteDefinition__Group_6_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_6_2__0__Impl
	rule__SuiteDefinition__Group_6_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_6_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getFinalizersAssignment_6_2_0()); }
(rule__SuiteDefinition__FinalizersAssignment_6_2_0)
{ after(grammarAccess.getSuiteDefinitionAccess().getFinalizersAssignment_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteDefinition__Group_6_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteDefinition__Group_6_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__Group_6_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_6_2_1()); }
	ruleNL
{ after(grammarAccess.getSuiteDefinitionAccess().getNLParserRuleCall_6_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__OperationDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__0__Impl
	rule__OperationDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getOperationdefKeyword_0()); }

	'operationdef' 

{ after(grammarAccess.getOperationDefinitionAccess().getOperationdefKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__1__Impl
	rule__OperationDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__2__Impl
	rule__OperationDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNameAssignment_2()); }
(rule__OperationDefinition__NameAssignment_2)
{ after(grammarAccess.getOperationDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__3__Impl
	rule__OperationDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__4__Impl
	rule__OperationDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getUsesKeyword_4()); }

	'uses' 

{ after(grammarAccess.getOperationDefinitionAccess().getUsesKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__5__Impl
	rule__OperationDefinition__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__6__Impl
	rule__OperationDefinition__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getOperationTypeAssignment_6()); }
(rule__OperationDefinition__OperationTypeAssignment_6)
{ after(grammarAccess.getOperationDefinitionAccess().getOperationTypeAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__OperationDefinition__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__OperationDefinition__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_7()); }
	ruleNL
{ after(grammarAccess.getOperationDefinitionAccess().getNLParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__VariableDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__0__Impl
	rule__VariableDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getVariableKeyword_0()); }

	'variable' 

{ after(grammarAccess.getVariableDefinitionAccess().getVariableKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__1__Impl
	rule__VariableDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__2__Impl
	rule__VariableDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNameAssignment_2()); }
(rule__VariableDefinition__NameAssignment_2)
{ after(grammarAccess.getVariableDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__3__Impl
	rule__VariableDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getGroup_4()); }
(rule__VariableDefinition__Group_4__0)?
{ after(grammarAccess.getVariableDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__VariableDefinition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group_4__0__Impl
	rule__VariableDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getInitiallyKeyword_4_0()); }

	'initially' 

{ after(grammarAccess.getVariableDefinitionAccess().getInitiallyKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group_4__1__Impl
	rule__VariableDefinition__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_4_1()); }
	ruleNL
{ after(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group_4__2__Impl
	rule__VariableDefinition__Group_4__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getInitialValueAssignment_4_2()); }
(rule__VariableDefinition__InitialValueAssignment_4_2)
{ after(grammarAccess.getVariableDefinitionAccess().getInitialValueAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariableDefinition__Group_4__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariableDefinition__Group_4__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__Group_4__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_4_3()); }
	ruleNL
{ after(grammarAccess.getVariableDefinitionAccess().getNLParserRuleCall_4_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ConstantDefinition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__0__Impl
	rule__ConstantDefinition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getConstantKeyword_0()); }

	'constant' 

{ after(grammarAccess.getConstantDefinitionAccess().getConstantKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__1__Impl
	rule__ConstantDefinition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__2__Impl
	rule__ConstantDefinition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNameAssignment_2()); }
(rule__ConstantDefinition__NameAssignment_2)
{ after(grammarAccess.getConstantDefinitionAccess().getNameAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__3__Impl
	rule__ConstantDefinition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__4__Impl
	rule__ConstantDefinition__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup_4()); }
(rule__ConstantDefinition__Group_4__0)?
{ after(grammarAccess.getConstantDefinitionAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getGroup_5()); }
(rule__ConstantDefinition__Group_5__0)*
{ after(grammarAccess.getConstantDefinitionAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__ConstantDefinition__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_4__0__Impl
	rule__ConstantDefinition__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getValueAssignment_4_0()); }
(rule__ConstantDefinition__ValueAssignment_4_0)
{ after(grammarAccess.getConstantDefinitionAccess().getValueAssignment_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_4_1()); }
	ruleNL
{ after(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ConstantDefinition__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_5__0__Impl
	rule__ConstantDefinition__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getVariantValuesAssignment_5_0()); }
(rule__ConstantDefinition__VariantValuesAssignment_5_0)
{ after(grammarAccess.getConstantDefinitionAccess().getVariantValuesAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ConstantDefinition__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ConstantDefinition__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_5_1()); }
	ruleNL
{ after(grammarAccess.getConstantDefinitionAccess().getNLParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__VariantValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__0__Impl
	rule__VariantValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getInKeyword_0()); }

	'in' 

{ after(grammarAccess.getVariantValueAccess().getInKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__1__Impl
	rule__VariantValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getVariantValueAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__2__Impl
	rule__VariantValue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getVariantValueAccess().getGroup_2()); }
(rule__VariantValue__Group_2__0)
{ after(grammarAccess.getVariantValueAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getVariantValueAccess().getGroup_2()); }
(rule__VariantValue__Group_2__0)*
{ after(grammarAccess.getVariantValueAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__3__Impl
	rule__VariantValue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getColonKeyword_3()); }

	':' 

{ after(grammarAccess.getVariantValueAccess().getColonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__4__Impl
	rule__VariantValue__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getNLParserRuleCall_4()); }
	ruleNL
{ after(grammarAccess.getVariantValueAccess().getNLParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getValueAssignment_5()); }
(rule__VariantValue__ValueAssignment_5)
{ after(grammarAccess.getVariantValueAccess().getValueAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__VariantValue__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group_2__0__Impl
	rule__VariantValue__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getNamesAssignment_2_0()); }
(rule__VariantValue__NamesAssignment_2_0)
{ after(grammarAccess.getVariantValueAccess().getNamesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__VariantValue__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__VariantValue__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getVariantValueAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Test__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__0__Impl
	rule__Test__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getTestKeyword_0()); }

	'test' 

{ after(grammarAccess.getTestAccess().getTestKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__1__Impl
	rule__Test__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__2__Impl
	rule__Test__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getDefinitionAssignment_2()); }
(rule__Test__DefinitionAssignment_2)
{ after(grammarAccess.getTestAccess().getDefinitionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__3__Impl
	rule__Test__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getGroup_3()); }
(rule__Test__Group_3__0)*
{ after(grammarAccess.getTestAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__4__Impl
	rule__Test__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getGroup_4()); }
(rule__Test__Group_4__0)*
{ after(grammarAccess.getTestAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__5__Impl
	rule__Test__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getGroup_5()); }
(rule__Test__Group_5__0)?
{ after(grammarAccess.getTestAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_6()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__Test__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_3__0__Impl
	rule__Test__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_3_0()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getParametersAssignment_3_1()); }
(rule__Test__ParametersAssignment_3_1)
{ after(grammarAccess.getTestAccess().getParametersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Test__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_4__0__Impl
	rule__Test__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_4_0()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getResultsAssignment_4_1()); }
(rule__Test__ResultsAssignment_4_1)
{ after(grammarAccess.getTestAccess().getResultsAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Test__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_5__0__Impl
	rule__Test__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_5_0()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_5__1__Impl
	rule__Test__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getEqualsSignKeyword_5_1()); }

	'=' 

{ after(grammarAccess.getTestAccess().getEqualsSignKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_5__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_5__2__Impl
	rule__Test__Group_5__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_5__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getNLParserRuleCall_5_2()); }
	ruleNL
{ after(grammarAccess.getTestAccess().getNLParserRuleCall_5_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Test__Group_5__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Test__Group_5__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Test__Group_5__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getResultAssignment_5_3()); }
(rule__Test__ResultAssignment_5_3)
{ after(grammarAccess.getTestAccess().getResultAssignment_5_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__TableTest__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__0__Impl
	rule__TableTest__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getTabletestKeyword_0()); }

	'tabletest' 

{ after(grammarAccess.getTableTestAccess().getTabletestKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__1__Impl
	rule__TableTest__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getTableTestAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__2__Impl
	rule__TableTest__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getDefinitionAssignment_2()); }
(rule__TableTest__DefinitionAssignment_2)
{ after(grammarAccess.getTableTestAccess().getDefinitionAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__3__Impl
	rule__TableTest__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getGroup_3()); }
(rule__TableTest__Group_3__0)*
{ after(grammarAccess.getTableTestAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__4__Impl
	rule__TableTest__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_4()); }
	ruleNLFORCED
{ after(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__5__Impl
	rule__TableTest__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getParameterHeadersAssignment_5()); }
(rule__TableTest__ParameterHeadersAssignment_5)*
{ after(grammarAccess.getTableTestAccess().getParameterHeadersAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__6__Impl
	rule__TableTest__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getResultHeadersAssignment_6()); }
(rule__TableTest__ResultHeadersAssignment_6)*
{ after(grammarAccess.getTableTestAccess().getResultHeadersAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__7__Impl
	rule__TableTest__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getVerticalLineKeyword_7()); }

	'|' 

{ after(grammarAccess.getTableTestAccess().getVerticalLineKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__8__Impl
	rule__TableTest__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getGroup_8()); }
(rule__TableTest__Group_8__0)?
{ after(grammarAccess.getTableTestAccess().getGroup_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__9__Impl
	rule__TableTest__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTableTestAccess().getGroup_9()); }
(rule__TableTest__Group_9__0)
{ after(grammarAccess.getTableTestAccess().getGroup_9()); }
)
(
{ before(grammarAccess.getTableTestAccess().getGroup_9()); }
(rule__TableTest__Group_9__0)*
{ after(grammarAccess.getTableTestAccess().getGroup_9()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group__10__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_10()); }
	ruleNLFORCED
{ after(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}
























rule__TableTest__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_3__0__Impl
	rule__TableTest__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getNLParserRuleCall_3_0()); }
	ruleNL
{ after(grammarAccess.getTableTestAccess().getNLParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getParametersAssignment_3_1()); }
(rule__TableTest__ParametersAssignment_3_1)
{ after(grammarAccess.getTableTestAccess().getParametersAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableTest__Group_8__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_8__0__Impl
	rule__TableTest__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_8__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getDefaultResultColumnAssignment_8_0()); }
(rule__TableTest__DefaultResultColumnAssignment_8_0)
{ after(grammarAccess.getTableTestAccess().getDefaultResultColumnAssignment_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group_8__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_8__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getVerticalLineKeyword_8_1()); }

	'|' 

{ after(grammarAccess.getTableTestAccess().getVerticalLineKeyword_8_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableTest__Group_9__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_9__0__Impl
	rule__TableTest__Group_9__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_9__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_9_0()); }
	ruleNLFORCED
{ after(grammarAccess.getTableTestAccess().getNLFORCEDParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTest__Group_9__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTest__Group_9__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__Group_9__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getRowsAssignment_9_1()); }
(rule__TableTest__RowsAssignment_9_1)
{ after(grammarAccess.getTableTestAccess().getRowsAssignment_9_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TableTestRow__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTestRow__Group__0__Impl
	rule__TableTestRow__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTestRow__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestRowAccess().getTableTestRowAction_0()); }
(

)
{ after(grammarAccess.getTableTestRowAccess().getTableTestRowAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TableTestRow__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TableTestRow__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TableTestRow__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTableTestRowAccess().getValuesAssignment_1()); }
(rule__TableTestRow__ValuesAssignment_1)
{ after(grammarAccess.getTableTestRowAccess().getValuesAssignment_1()); }
)
(
{ before(grammarAccess.getTableTestRowAccess().getValuesAssignment_1()); }
(rule__TableTestRow__ValuesAssignment_1)*
{ after(grammarAccess.getTableTestRowAccess().getValuesAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParameterTableHeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableHeader__Group__0__Impl
	rule__ParameterTableHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableHeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableHeaderAccess().getVerticalLineKeyword_0()); }

	'|' 

{ after(grammarAccess.getParameterTableHeaderAccess().getVerticalLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTableHeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableHeader__Group__1__Impl
	rule__ParameterTableHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableHeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableHeaderAccess().getNameAssignment_1()); }
(rule__ParameterTableHeader__NameAssignment_1)
{ after(grammarAccess.getParameterTableHeaderAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTableHeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableHeader__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableHeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableHeaderAccess().getVerticalLineKeyword_2()); }
(
	'|' 
)?
{ after(grammarAccess.getParameterTableHeaderAccess().getVerticalLineKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ResultTableHeader__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultTableHeader__Group__0__Impl
	rule__ResultTableHeader__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultTableHeader__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultTableHeaderAccess().getVerticalLineKeyword_0()); }

	'|' 

{ after(grammarAccess.getResultTableHeaderAccess().getVerticalLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultTableHeader__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultTableHeader__Group__1__Impl
	rule__ResultTableHeader__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultTableHeader__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultTableHeaderAccess().getNameAssignment_1()); }
(rule__ResultTableHeader__NameAssignment_1)
{ after(grammarAccess.getResultTableHeaderAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultTableHeader__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultTableHeader__Group__2__Impl
	rule__ResultTableHeader__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultTableHeader__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultTableHeaderAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getResultTableHeaderAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ResultTableHeader__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ResultTableHeader__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ResultTableHeader__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultTableHeaderAccess().getVerticalLineKeyword_3()); }
(
	'|' 
)?
{ after(grammarAccess.getResultTableHeaderAccess().getVerticalLineKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParameterTableValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableValue__Group__0__Impl
	rule__ParameterTableValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableValueAccess().getVerticalLineKeyword_0()); }

	'|' 

{ after(grammarAccess.getParameterTableValueAccess().getVerticalLineKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTableValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableValue__Group__1__Impl
	rule__ParameterTableValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableValueAccess().getValueAssignment_1()); }
(rule__ParameterTableValue__ValueAssignment_1)
{ after(grammarAccess.getParameterTableValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParameterTableValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParameterTableValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableValueAccess().getVerticalLineKeyword_2()); }
(
	'|' 
)?
{ after(grammarAccess.getParameterTableValueAccess().getVerticalLineKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NamedResult__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedResult__Group__0__Impl
	rule__NamedResult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getNameAssignment_0()); }
(rule__NamedResult__NameAssignment_0)
{ after(grammarAccess.getNamedResultAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedResult__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedResult__Group__1__Impl
	rule__NamedResult__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getNamedResultAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedResult__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedResult__Group__2__Impl
	rule__NamedResult__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getNamedResultAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedResult__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedResult__Group__3__Impl
	rule__NamedResult__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getNamedResultAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedResult__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedResult__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getValueAssignment_4()); }
(rule__NamedResult__ValueAssignment_4)
{ after(grammarAccess.getNamedResultAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Call__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__0__Impl
	rule__Call__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getCallKeyword_0()); }

	'call' 

{ after(grammarAccess.getCallAccess().getCallKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__1__Impl
	rule__Call__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__2__Impl
	rule__Call__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_2()); }
(rule__Call__Group_2__0)?
{ after(grammarAccess.getCallAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__3__Impl
	rule__Call__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getDefinitionAssignment_3()); }
(rule__Call__DefinitionAssignment_3)
{ after(grammarAccess.getCallAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__4__Impl
	rule__Call__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_4()); }
(rule__Call__Group_4__0)*
{ after(grammarAccess.getCallAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__5__Impl
	rule__Call__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_5()); }
(rule__Call__Group_5__0)*
{ after(grammarAccess.getCallAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__6__Impl
	rule__Call__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getGroup_6()); }
(rule__Call__Group_6__0)?
{ after(grammarAccess.getCallAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_7()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Call__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_2__0__Impl
	rule__Call__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getMultiplierAssignment_2_0()); }
(rule__Call__MultiplierAssignment_2_0)
{ after(grammarAccess.getCallAccess().getMultiplierAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Call__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_4__0__Impl
	rule__Call__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_4_0()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getParametersAssignment_4_1()); }
(rule__Call__ParametersAssignment_4_1)
{ after(grammarAccess.getCallAccess().getParametersAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Call__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_5__0__Impl
	rule__Call__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_5_0()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getResultsAssignment_5_1()); }
(rule__Call__ResultsAssignment_5_1)
{ after(grammarAccess.getCallAccess().getResultsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Call__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_6__0__Impl
	rule__Call__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_6_0()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_6__1__Impl
	rule__Call__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getHyphenMinusGreaterThanSignKeyword_6_1()); }

	'->' 

{ after(grammarAccess.getCallAccess().getHyphenMinusGreaterThanSignKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_6__2__Impl
	rule__Call__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getNLParserRuleCall_6_2()); }
	ruleNL
{ after(grammarAccess.getCallAccess().getNLParserRuleCall_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Call__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Call__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Call__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getResultAssignment_6_3()); }
(rule__Call__ResultAssignment_6_3)
{ after(grammarAccess.getCallAccess().getResultAssignment_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NamedCallResult__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedCallResult__Group__0__Impl
	rule__NamedCallResult__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getNameAssignment_0()); }
(rule__NamedCallResult__NameAssignment_0)
{ after(grammarAccess.getNamedCallResultAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedCallResult__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedCallResult__Group__1__Impl
	rule__NamedCallResult__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getNamedCallResultAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedCallResult__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedCallResult__Group__2__Impl
	rule__NamedCallResult__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getHyphenMinusGreaterThanSignKeyword_2()); }

	'->' 

{ after(grammarAccess.getNamedCallResultAccess().getHyphenMinusGreaterThanSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedCallResult__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedCallResult__Group__3__Impl
	rule__NamedCallResult__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getNamedCallResultAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NamedCallResult__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NamedCallResult__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getTargetAssignment_4()); }
(rule__NamedCallResult__TargetAssignment_4)
{ after(grammarAccess.getNamedCallResultAccess().getTargetAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Suite__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__0__Impl
	rule__Suite__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getSuiteKeyword_0()); }

	'suite' 

{ after(grammarAccess.getSuiteAccess().getSuiteKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__1__Impl
	rule__Suite__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__2__Impl
	rule__Suite__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getGroup_2()); }
(rule__Suite__Group_2__0)?
{ after(grammarAccess.getSuiteAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__3__Impl
	rule__Suite__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getDefinitionAssignment_3()); }
(rule__Suite__DefinitionAssignment_3)
{ after(grammarAccess.getSuiteAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__4__Impl
	rule__Suite__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_4()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__5__Impl
	rule__Suite__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getGroup_5()); }
(rule__Suite__Group_5__0)*
{ after(grammarAccess.getSuiteAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__6__Impl
	rule__Suite__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getGroup_6()); }
(rule__Suite__Group_6__0)?
{ after(grammarAccess.getSuiteAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group__7__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getGroup_7()); }
(rule__Suite__Group_7__0)?
{ after(grammarAccess.getSuiteAccess().getGroup_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


















rule__Suite__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_2__0__Impl
	rule__Suite__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getMultiplierAssignment_2_0()); }
(rule__Suite__MultiplierAssignment_2_0)
{ after(grammarAccess.getSuiteAccess().getMultiplierAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Suite__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_5__0__Impl
	rule__Suite__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getParametersAssignment_5_0()); }
(rule__Suite__ParametersAssignment_5_0)
{ after(grammarAccess.getSuiteAccess().getParametersAssignment_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_5_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Suite__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_6__0__Impl
	rule__Suite__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getOnKeyword_6_0()); }

	'on' 

{ after(grammarAccess.getSuiteAccess().getOnKeyword_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_6__1__Impl
	rule__Suite__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_6_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_6__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_6__2__Impl
	rule__Suite__Group_6__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_6__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getForkAssignment_6_2()); }
(rule__Suite__ForkAssignment_6_2)
{ after(grammarAccess.getSuiteAccess().getForkAssignment_6_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_6__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_6__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_6__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_6_3()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_6_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Suite__Group_7__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_7__0__Impl
	rule__Suite__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_7__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getInKeyword_7_0()); }

	'in' 

{ after(grammarAccess.getSuiteAccess().getInKeyword_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_7__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_7__1__Impl
	rule__Suite__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_7__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_7_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_7_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_7__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_7__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getSuiteAccess().getGroup_7_2()); }
(rule__Suite__Group_7_2__0)
{ after(grammarAccess.getSuiteAccess().getGroup_7_2()); }
)
(
{ before(grammarAccess.getSuiteAccess().getGroup_7_2()); }
(rule__Suite__Group_7_2__0)*
{ after(grammarAccess.getSuiteAccess().getGroup_7_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Suite__Group_7_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_7_2__0__Impl
	rule__Suite__Group_7_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_7_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getVariantsAssignment_7_2_0()); }
(rule__Suite__VariantsAssignment_7_2_0)
{ after(grammarAccess.getSuiteAccess().getVariantsAssignment_7_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Suite__Group_7_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Suite__Group_7_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__Group_7_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getNLParserRuleCall_7_2_1()); }
	ruleNL
{ after(grammarAccess.getSuiteAccess().getNLParserRuleCall_7_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__SuiteParameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameter__Group__0__Impl
	rule__SuiteParameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getNameAssignment_0()); }
(rule__SuiteParameter__NameAssignment_0)
{ after(grammarAccess.getSuiteParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameter__Group__1__Impl
	rule__SuiteParameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getSuiteParameterAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameter__Group__2__Impl
	rule__SuiteParameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getSuiteParameterAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameter__Group__3__Impl
	rule__SuiteParameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getSuiteParameterAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__SuiteParameter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__SuiteParameter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getValueAssignment_4()); }
(rule__SuiteParameter__ValueAssignment_4)
{ after(grammarAccess.getSuiteParameterAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Parameter__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__0__Impl
	rule__Parameter__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameAssignment_0()); }
(rule__Parameter__NameAssignment_0)
{ after(grammarAccess.getParameterAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__1__Impl
	rule__Parameter__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getParameterAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__2__Impl
	rule__Parameter__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getParameterAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__3__Impl
	rule__Parameter__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getParameterAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Parameter__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Parameter__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getValueAssignment_4()); }
(rule__Parameter__ValueAssignment_4)
{ after(grammarAccess.getParameterAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__ArbitraryParameterOrResultName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArbitraryParameterOrResultName__Group__0__Impl
	rule__ArbitraryParameterOrResultName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ArbitraryParameterOrResultName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getPlusSignKeyword_0()); }

	'+' 

{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getPlusSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ArbitraryParameterOrResultName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ArbitraryParameterOrResultName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ArbitraryParameterOrResultName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getIdentifierAssignment_1()); }
(rule__ArbitraryParameterOrResultName__IdentifierAssignment_1)
{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getIdentifierAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StandardOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__0__Impl
	rule__StandardOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getLeftParenthesisKeyword_0()); }

	'(' 

{ after(grammarAccess.getStandardOperationAccess().getLeftParenthesisKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__1__Impl
	rule__StandardOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__2__Impl
	rule__StandardOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getGroup_2()); }
(rule__StandardOperation__Group_2__0)
{ after(grammarAccess.getStandardOperationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__3__Impl
	rule__StandardOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStandardOperationAccess().getGroup_3()); }
(rule__StandardOperation__Group_3__0)
{ after(grammarAccess.getStandardOperationAccess().getGroup_3()); }
)
(
{ before(grammarAccess.getStandardOperationAccess().getGroup_3()); }
(rule__StandardOperation__Group_3__0)*
{ after(grammarAccess.getStandardOperationAccess().getGroup_3()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getStandardOperationAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__StandardOperation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group_2__0__Impl
	rule__StandardOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getFirstOperandAssignment_2_0()); }
(rule__StandardOperation__FirstOperandAssignment_2_0)
{ after(grammarAccess.getStandardOperationAccess().getFirstOperandAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__StandardOperation__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group_3__0__Impl
	rule__StandardOperation__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getOperatorsAssignment_3_0()); }
(rule__StandardOperation__OperatorsAssignment_3_0)
{ after(grammarAccess.getStandardOperationAccess().getOperatorsAssignment_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group_3__1__Impl
	rule__StandardOperation__Group_3__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_3_1()); }
	ruleNL
{ after(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group_3__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group_3__2__Impl
	rule__StandardOperation__Group_3__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group_3__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getMoreOperandsAssignment_3_2()); }
(rule__StandardOperation__MoreOperandsAssignment_3_2)
{ after(grammarAccess.getStandardOperationAccess().getMoreOperandsAssignment_3_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StandardOperation__Group_3__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StandardOperation__Group_3__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__Group_3__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_3_3()); }
	ruleNL
{ after(grammarAccess.getStandardOperationAccess().getNLParserRuleCall_3_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__CustomOperation__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__0__Impl
	rule__CustomOperation__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getCustomOperationAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__1__Impl
	rule__CustomOperation__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__2__Impl
	rule__CustomOperation__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getGroup_2()); }
(rule__CustomOperation__Group_2__0)?
{ after(grammarAccess.getCustomOperationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__3__Impl
	rule__CustomOperation__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getDefinitionAssignment_3()); }
(rule__CustomOperation__DefinitionAssignment_3)
{ after(grammarAccess.getCustomOperationAccess().getDefinitionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__4__Impl
	rule__CustomOperation__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getGroup_4()); }
(rule__CustomOperation__Group_4__0)?
{ after(grammarAccess.getCustomOperationAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__5__Impl
	rule__CustomOperation__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_5()); }
	ruleNL
{ after(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getRightSquareBracketKeyword_6()); }

	']' 

{ after(grammarAccess.getCustomOperationAccess().getRightSquareBracketKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}
















rule__CustomOperation__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group_2__0__Impl
	rule__CustomOperation__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getPrefixOperandAssignment_2_0()); }
(rule__CustomOperation__PrefixOperandAssignment_2_0)
{ after(grammarAccess.getCustomOperationAccess().getPrefixOperandAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__CustomOperation__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group_4__0__Impl
	rule__CustomOperation__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_4_0()); }
	ruleNL
{ after(grammarAccess.getCustomOperationAccess().getNLParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group_4__1__Impl
	rule__CustomOperation__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getWithKeyword_4_1()); }

	'with' 

{ after(grammarAccess.getCustomOperationAccess().getWithKeyword_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__CustomOperation__Group_4__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__CustomOperation__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__Group_4__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getPostfixOperandAssignment_4_2()); }
(rule__CustomOperation__PostfixOperandAssignment_4_2)
{ after(grammarAccess.getCustomOperationAccess().getPostfixOperandAssignment_4_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ValueOrEnumValueOrOperationCollection__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group__0__Impl
	rule__ValueOrEnumValueOrOperationCollection__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getValueAssignment_0()); }
(rule__ValueOrEnumValueOrOperationCollection__ValueAssignment_0)
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueOrEnumValueOrOperationCollection__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getGroup_1()); }
(rule__ValueOrEnumValueOrOperationCollection__Group_1__0)*
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ValueOrEnumValueOrOperationCollection__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group_1__0__Impl
	rule__ValueOrEnumValueOrOperationCollection__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getNLParserRuleCall_1_0()); }
	ruleNL
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getNLParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueOrEnumValueOrOperationCollection__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group_1__1__Impl
	rule__ValueOrEnumValueOrOperationCollection__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getCommaKeyword_1_1()); }

	',' 

{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getCommaKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueOrEnumValueOrOperationCollection__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group_1__2__Impl
	rule__ValueOrEnumValueOrOperationCollection__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getNLParserRuleCall_1_2()); }
	ruleNL
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getNLParserRuleCall_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ValueOrEnumValueOrOperationCollection__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ValueOrEnumValueOrOperationCollection__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getMoreValuesAssignment_1_3()); }
(rule__ValueOrEnumValueOrOperationCollection__MoreValuesAssignment_1_3)
{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getMoreValuesAssignment_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__IsoDateAndTimeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsoDateAndTimeValue__Group__0__Impl
	rule__IsoDateAndTimeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IsoDateAndTimeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoDateAndTimeValueAccess().getDateValueAssignment_0()); }
(rule__IsoDateAndTimeValue__DateValueAssignment_0)
{ after(grammarAccess.getIsoDateAndTimeValueAccess().getDateValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__IsoDateAndTimeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__IsoDateAndTimeValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IsoDateAndTimeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoDateAndTimeValueAccess().getTimeValueAssignment_1()); }
(rule__IsoDateAndTimeValue__TimeValueAssignment_1)
{ after(grammarAccess.getIsoDateAndTimeValueAccess().getTimeValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EuropeanDateAnd24HrsTimeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd24HrsTimeValue__Group__0__Impl
	rule__EuropeanDateAnd24HrsTimeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd24HrsTimeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getDateValueAssignment_0()); }
(rule__EuropeanDateAnd24HrsTimeValue__DateValueAssignment_0)
{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getDateValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EuropeanDateAnd24HrsTimeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd24HrsTimeValue__Group__1__Impl
	rule__EuropeanDateAnd24HrsTimeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd24HrsTimeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EuropeanDateAnd24HrsTimeValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd24HrsTimeValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd24HrsTimeValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getTimeValueAssignment_2()); }
(rule__EuropeanDateAnd24HrsTimeValue__TimeValueAssignment_2)
{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getTimeValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__EuropeanDateAnd12HrsTimeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd12HrsTimeValue__Group__0__Impl
	rule__EuropeanDateAnd12HrsTimeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd12HrsTimeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getDateValueAssignment_0()); }
(rule__EuropeanDateAnd12HrsTimeValue__DateValueAssignment_0)
{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getDateValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EuropeanDateAnd12HrsTimeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd12HrsTimeValue__Group__1__Impl
	rule__EuropeanDateAnd12HrsTimeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd12HrsTimeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EuropeanDateAnd12HrsTimeValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EuropeanDateAnd12HrsTimeValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd12HrsTimeValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getTimeValueAssignment_2()); }
(rule__EuropeanDateAnd12HrsTimeValue__TimeValueAssignment_2)
{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getTimeValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__USDateAnd12HrsTimeValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__USDateAnd12HrsTimeValue__Group__0__Impl
	rule__USDateAnd12HrsTimeValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__USDateAnd12HrsTimeValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getDateValueAssignment_0()); }
(rule__USDateAnd12HrsTimeValue__DateValueAssignment_0)
{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getDateValueAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__USDateAnd12HrsTimeValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__USDateAnd12HrsTimeValue__Group__1__Impl
	rule__USDateAnd12HrsTimeValue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__USDateAnd12HrsTimeValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__USDateAnd12HrsTimeValue__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__USDateAnd12HrsTimeValue__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__USDateAnd12HrsTimeValue__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getTimeValueAssignment_2()); }
(rule__USDateAnd12HrsTimeValue__TimeValueAssignment_2)
{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getTimeValueAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NullValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullValue__Group__0__Impl
	rule__NullValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullValueAccess().getNullAction_0()); }
(

)
{ after(grammarAccess.getNullValueAccess().getNullAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullValueAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullValueAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NestedObject__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group__0__Impl
	rule__NestedObject__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getLeftCurlyBracketKeyword_0()); }

	'{' 

{ after(grammarAccess.getNestedObjectAccess().getLeftCurlyBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group__1__Impl
	rule__NestedObject__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getNestedObjectAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group__2__Impl
	rule__NestedObject__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getNestedObjectAccess().getGroup_2()); }
(rule__NestedObject__Group_2__0)
{ after(grammarAccess.getNestedObjectAccess().getGroup_2()); }
)
(
{ before(grammarAccess.getNestedObjectAccess().getGroup_2()); }
(rule__NestedObject__Group_2__0)*
{ after(grammarAccess.getNestedObjectAccess().getGroup_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getNestedObjectAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__NestedObject__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group_2__0__Impl
	rule__NestedObject__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getAttributesAssignment_2_0()); }
(rule__NestedObject__AttributesAssignment_2_0)
{ after(grammarAccess.getNestedObjectAccess().getAttributesAssignment_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NestedObject__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NestedObject__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getNLParserRuleCall_2_1()); }
	ruleNL
{ after(grammarAccess.getNestedObjectAccess().getNLParserRuleCall_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__KeyValuePair__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValuePair__Group__0__Impl
	rule__KeyValuePair__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getIdentifierAssignment_0()); }
(rule__KeyValuePair__IdentifierAssignment_0)
{ after(grammarAccess.getKeyValuePairAccess().getIdentifierAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValuePair__Group__1__Impl
	rule__KeyValuePair__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getNLParserRuleCall_1()); }
	ruleNL
{ after(grammarAccess.getKeyValuePairAccess().getNLParserRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValuePair__Group__2__Impl
	rule__KeyValuePair__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getColonKeyword_2()); }

	':' 

{ after(grammarAccess.getKeyValuePairAccess().getColonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValuePair__Group__3__Impl
	rule__KeyValuePair__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getNLParserRuleCall_3()); }
	ruleNL
{ after(grammarAccess.getKeyValuePairAccess().getNLParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__KeyValuePair__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__KeyValuePair__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getValueAssignment_4()); }
(rule__KeyValuePair__ValueAssignment_4)
{ after(grammarAccess.getKeyValuePairAccess().getValueAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__MethodReference__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodReference__Group__0__Impl
	rule__MethodReference__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodReference__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodReferenceAccess().getTypeAssignment_0()); }
(rule__MethodReference__TypeAssignment_0)
{ after(grammarAccess.getMethodReferenceAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodReference__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodReference__Group__1__Impl
	rule__MethodReference__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodReference__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodReferenceAccess().getNumberSignKeyword_1()); }

	'#' 

{ after(grammarAccess.getMethodReferenceAccess().getNumberSignKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MethodReference__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MethodReference__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MethodReference__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodReferenceAccess().getMethodAssignment_2()); }
(rule__MethodReference__MethodAssignment_2)
{ after(grammarAccess.getMethodReferenceAccess().getMethodAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ExecutionMultiplier__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecutionMultiplier__Group__0__Impl
	rule__ExecutionMultiplier__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionMultiplier__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionMultiplierAccess().getCountAssignment_0()); }
(rule__ExecutionMultiplier__CountAssignment_0)
{ after(grammarAccess.getExecutionMultiplierAccess().getCountAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ExecutionMultiplier__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ExecutionMultiplier__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionMultiplier__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionMultiplierAccess().getAsteriskKeyword_1()); }

	'*' 

{ after(grammarAccess.getExecutionMultiplierAccess().getAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__0__Impl
	rule__QualifiedName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
(rule__QualifiedName__Group_1__0)*
{ after(grammarAccess.getQualifiedNameAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedName__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__0__Impl
	rule__QualifiedName__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }

	'.' 

{ after(grammarAccess.getQualifiedNameAccess().getFullStopKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedName__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedName__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedName__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
	RULE_ID
{ after(grammarAccess.getQualifiedNameAccess().getIDTerminalRuleCall_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__QualifiedJavaClassName__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedJavaClassName__Group__0__Impl
	rule__QualifiedJavaClassName__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedJavaClassName__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedJavaClassNameAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedJavaClassNameAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedJavaClassName__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedJavaClassName__Group__1__Impl
	rule__QualifiedJavaClassName__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedJavaClassName__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedJavaClassNameAccess().getFullStopKeyword_1()); }

	'.' 

{ after(grammarAccess.getQualifiedJavaClassNameAccess().getFullStopKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedJavaClassName__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedJavaClassName__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedJavaClassName__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedJavaClassNameAccess().getUPPERCASE_IDTerminalRuleCall_2()); }
	RULE_UPPERCASE_ID
{ after(grammarAccess.getQualifiedJavaClassNameAccess().getUPPERCASE_IDTerminalRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__QualifiedNameWithWildcard__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__0__Impl
	rule__QualifiedNameWithWildcard__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__QualifiedNameWithWildcard__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__QualifiedNameWithWildcard__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__QualifiedNameWithWildcard__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
(
	'.*' 
)?
{ after(grammarAccess.getQualifiedNameWithWildcardAccess().getFullStopAsteriskKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NL__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NL__Group__0__Impl
	rule__NL__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NL__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLAccess().getNEWLINETerminalRuleCall_0()); }
	RULE_NEWLINE
{ after(grammarAccess.getNLAccess().getNEWLINETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NL__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NL__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NL__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)?
{ after(grammarAccess.getNLAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__NLFORCED__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLFORCED__Group__0__Impl
	rule__NLFORCED__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NLFORCED__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLFORCEDAccess().getNEWLINETerminalRuleCall_0()); }
	RULE_NEWLINE
{ after(grammarAccess.getNLFORCEDAccess().getNEWLINETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLFORCED__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLFORCED__Group__1__Impl
	rule__NLFORCED__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__NLFORCED__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLFORCEDAccess().getWSTerminalRuleCall_1()); }
(	RULE_WS)?
{ after(grammarAccess.getNLFORCEDAccess().getWSTerminalRuleCall_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NLFORCED__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NLFORCED__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NLFORCED__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNLFORCEDAccess().getNLParserRuleCall_2()); }
	ruleNL
{ after(grammarAccess.getNLFORCEDAccess().getNLParserRuleCall_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}









rule__Model__StatementsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_2_0()); }
	ruleStatement{ after(grammarAccess.getModelAccess().getStatementsStatementParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleSingleLineComment__ContentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleSingleLineCommentAccess().getContentSL_VISIBLE_COMMENTTerminalRuleCall_0_0()); }
	RULE_SL_VISIBLE_COMMENT{ after(grammarAccess.getVisibleSingleLineCommentAccess().getContentSL_VISIBLE_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleMultiLineComment__ContentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleMultiLineCommentAccess().getContentML_VISIBLE_COMMENTTerminalRuleCall_0_0()); }
	RULE_ML_VISIBLE_COMMENT{ after(grammarAccess.getVisibleMultiLineCommentAccess().getContentML_VISIBLE_COMMENTTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VisibleDivider__ContentAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVisibleDividerAccess().getContentDIVIDERTerminalRuleCall_0_0()); }
	RULE_DIVIDER{ after(grammarAccess.getVisibleDividerAccess().getContentDIVIDERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getPackageDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__PackageDefinition__StatementsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPackageDefinitionAccess().getStatementsPackageStatementParserRuleCall_5_0()); }
	rulePackageStatement{ after(grammarAccess.getPackageDefinitionAccess().getStatementsPackageStatementParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__ImportedNamespaceAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_2_0()); }
	ruleQualifiedNameWithWildcard{ after(grammarAccess.getImportAccess().getImportedNamespaceQualifiedNameWithWildcardParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getForkDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__DescriptionAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getDescriptionSTRINGTerminalRuleCall_4_0_0()); }
	RULE_STRING{ after(grammarAccess.getForkDefinitionAccess().getDescriptionSTRINGTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__ForkerClassAssignment_5_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getForkerClassJavaClassReferenceParserRuleCall_5_2_0()); }
	ruleJavaClassReference{ after(grammarAccess.getForkDefinitionAccess().getForkerClassJavaClassReferenceParserRuleCall_5_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkDefinition__ParametersAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkDefinitionAccess().getParametersForkParameterParserRuleCall_6_0_0()); }
	ruleForkParameter{ after(grammarAccess.getForkDefinitionAccess().getParametersForkParameterParserRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getNameFixedParameterNameParserRuleCall_0_0()); }
	ruleFixedParameterName{ after(grammarAccess.getForkParameterAccess().getNameFixedParameterNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ForkParameter__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getForkParameterAccess().getValueValueOrEnumValueOrOperationParserRuleCall_4_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getForkParameterAccess().getValueValueOrEnumValueOrOperationParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getVariantDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariantDefinition__DescriptionAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantDefinitionAccess().getDescriptionSTRINGTerminalRuleCall_4_0_0()); }
	RULE_STRING{ after(grammarAccess.getVariantDefinitionAccess().getDescriptionSTRINGTerminalRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getTestDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TestDefinition__FixtureMethodAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestDefinitionAccess().getFixtureMethodMethodReferenceParserRuleCall_6_0()); }
	ruleMethodReference{ after(grammarAccess.getTestDefinitionAccess().getFixtureMethodMethodReferenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getCallDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CallDefinition__FixtureMethodAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallDefinitionAccess().getFixtureMethodMethodReferenceParserRuleCall_6_0()); }
	ruleMethodReference{ after(grammarAccess.getCallDefinitionAccess().getFixtureMethodMethodReferenceParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__ParametersAssignment_4_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getParametersVariableEntityParserRuleCall_4_2_0_0()); }
	ruleVariableEntity{ after(grammarAccess.getSuiteDefinitionAccess().getParametersVariableEntityParserRuleCall_4_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__DependenciesAssignment_5_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getDependenciesSuiteDefinitionCrossReference_5_2_0_0()); }
(
{ before(grammarAccess.getSuiteDefinitionAccess().getDependenciesSuiteDefinitionQualifiedNameParserRuleCall_5_2_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteDefinitionAccess().getDependenciesSuiteDefinitionQualifiedNameParserRuleCall_5_2_0_0_1()); }
)
{ after(grammarAccess.getSuiteDefinitionAccess().getDependenciesSuiteDefinitionCrossReference_5_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__FinalizersAssignment_6_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getFinalizersSuiteDefinitionCrossReference_6_2_0_0()); }
(
{ before(grammarAccess.getSuiteDefinitionAccess().getFinalizersSuiteDefinitionQualifiedNameParserRuleCall_6_2_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteDefinitionAccess().getFinalizersSuiteDefinitionQualifiedNameParserRuleCall_6_2_0_0_1()); }
)
{ after(grammarAccess.getSuiteDefinitionAccess().getFinalizersSuiteDefinitionCrossReference_6_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteDefinition__StatementsAssignment_9
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteDefinitionAccess().getStatementsSuiteStatementParserRuleCall_9_0()); }
	ruleSuiteStatement{ after(grammarAccess.getSuiteDefinitionAccess().getStatementsSuiteStatementParserRuleCall_9_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
	ruleQualifiedName{ after(grammarAccess.getOperationDefinitionAccess().getNameQualifiedNameParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__OperationDefinition__OperationTypeAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOperationDefinitionAccess().getOperationTypeJvmTypeCrossReference_6_0()); }
(
{ before(grammarAccess.getOperationDefinitionAccess().getOperationTypeJvmTypeQualifiedJavaClassNameParserRuleCall_6_0_1()); }
	ruleQualifiedJavaClassName{ after(grammarAccess.getOperationDefinitionAccess().getOperationTypeJvmTypeQualifiedJavaClassNameParserRuleCall_6_0_1()); }
)
{ after(grammarAccess.getOperationDefinitionAccess().getOperationTypeJvmTypeCrossReference_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getNameVariableEntityParserRuleCall_2_0()); }
	ruleVariableEntity{ after(grammarAccess.getVariableDefinitionAccess().getNameVariableEntityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableDefinition__InitialValueAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableDefinitionAccess().getInitialValueValueParserRuleCall_4_2_0()); }
	ruleValue{ after(grammarAccess.getVariableDefinitionAccess().getInitialValueValueParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__NameAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getNameVariableEntityParserRuleCall_2_0()); }
	ruleVariableEntity{ after(grammarAccess.getConstantDefinitionAccess().getNameVariableEntityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__ValueAssignment_4_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getValueStaticValueParserRuleCall_4_0_0()); }
	ruleStaticValue{ after(grammarAccess.getConstantDefinitionAccess().getValueStaticValueParserRuleCall_4_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ConstantDefinition__VariantValuesAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getConstantDefinitionAccess().getVariantValuesVariantValueParserRuleCall_5_0_0()); }
	ruleVariantValue{ after(grammarAccess.getConstantDefinitionAccess().getVariantValuesVariantValueParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__NamesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getNamesVariantDefinitionCrossReference_2_0_0()); }
(
{ before(grammarAccess.getVariantValueAccess().getNamesVariantDefinitionQualifiedNameParserRuleCall_2_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVariantValueAccess().getNamesVariantDefinitionQualifiedNameParserRuleCall_2_0_0_1()); }
)
{ after(grammarAccess.getVariantValueAccess().getNamesVariantDefinitionCrossReference_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariantValue__ValueAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariantValueAccess().getValueStaticValueParserRuleCall_5_0()); }
	ruleStaticValue{ after(grammarAccess.getVariantValueAccess().getValueStaticValueParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__VariableEntity__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableEntityAccess().getNameQualifiedNameParserRuleCall_0()); }
	ruleQualifiedName{ after(grammarAccess.getVariableEntityAccess().getNameQualifiedNameParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Test__DefinitionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getDefinitionTestDefinitionCrossReference_2_0()); }
(
{ before(grammarAccess.getTestAccess().getDefinitionTestDefinitionQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTestAccess().getDefinitionTestDefinitionQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTestAccess().getDefinitionTestDefinitionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Test__ParametersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getParametersParameterParserRuleCall_3_1_0()); }
	ruleParameter{ after(grammarAccess.getTestAccess().getParametersParameterParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Test__ResultsAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getResultsNamedResultParserRuleCall_4_1_0()); }
	ruleNamedResult{ after(grammarAccess.getTestAccess().getResultsNamedResultParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Test__ResultAssignment_5_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTestAccess().getResultValueOrEnumValueOrOperationCollectionParserRuleCall_5_3_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getTestAccess().getResultValueOrEnumValueOrOperationCollectionParserRuleCall_5_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__DefinitionAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getDefinitionTestDefinitionCrossReference_2_0()); }
(
{ before(grammarAccess.getTableTestAccess().getDefinitionTestDefinitionQualifiedNameParserRuleCall_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getTableTestAccess().getDefinitionTestDefinitionQualifiedNameParserRuleCall_2_0_1()); }
)
{ after(grammarAccess.getTableTestAccess().getDefinitionTestDefinitionCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__ParametersAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getParametersParameterParserRuleCall_3_1_0()); }
	ruleParameter{ after(grammarAccess.getTableTestAccess().getParametersParameterParserRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__ParameterHeadersAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getParameterHeadersParameterTableHeaderParserRuleCall_5_0()); }
	ruleParameterTableHeader{ after(grammarAccess.getTableTestAccess().getParameterHeadersParameterTableHeaderParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__ResultHeadersAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getResultHeadersResultTableHeaderParserRuleCall_6_0()); }
	ruleResultTableHeader{ after(grammarAccess.getTableTestAccess().getResultHeadersResultTableHeaderParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__DefaultResultColumnAssignment_8_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getDefaultResultColumnEqualsSignKeyword_8_0_0()); }
(
{ before(grammarAccess.getTableTestAccess().getDefaultResultColumnEqualsSignKeyword_8_0_0()); }

	'=' 

{ after(grammarAccess.getTableTestAccess().getDefaultResultColumnEqualsSignKeyword_8_0_0()); }
)

{ after(grammarAccess.getTableTestAccess().getDefaultResultColumnEqualsSignKeyword_8_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTest__RowsAssignment_9_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestAccess().getRowsTableTestRowParserRuleCall_9_1_0()); }
	ruleTableTestRow{ after(grammarAccess.getTableTestAccess().getRowsTableTestRowParserRuleCall_9_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TableTestRow__ValuesAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTableTestRowAccess().getValuesParameterTableValueParserRuleCall_1_0()); }
	ruleParameterTableValue{ after(grammarAccess.getTableTestRowAccess().getValuesParameterTableValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableHeader__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableHeaderAccess().getNameParameterNameParserRuleCall_1_0()); }
	ruleParameterName{ after(grammarAccess.getParameterTableHeaderAccess().getNameParameterNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ResultTableHeader__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getResultTableHeaderAccess().getNameResultNameParserRuleCall_1_0()); }
	ruleResultName{ after(grammarAccess.getResultTableHeaderAccess().getNameResultNameParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParameterTableValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterTableValueAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_1_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getParameterTableValueAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getNameResultNameParserRuleCall_0_0()); }
	ruleResultName{ after(grammarAccess.getNamedResultAccess().getNameResultNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedResult__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedResultAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getNamedResultAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FixedResultName__FieldAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedResultNameAccess().getFieldJvmFieldCrossReference_0()); }
(
{ before(grammarAccess.getFixedResultNameAccess().getFieldJvmFieldIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFixedResultNameAccess().getFieldJvmFieldIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFixedResultNameAccess().getFieldJvmFieldCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__MultiplierAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getMultiplierExecutionMultiplierParserRuleCall_2_0_0()); }
	ruleExecutionMultiplier{ after(grammarAccess.getCallAccess().getMultiplierExecutionMultiplierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getDefinitionCallDefinitionCrossReference_3_0()); }
(
{ before(grammarAccess.getCallAccess().getDefinitionCallDefinitionQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getCallAccess().getDefinitionCallDefinitionQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getCallAccess().getDefinitionCallDefinitionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ParametersAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getParametersParameterParserRuleCall_4_1_0()); }
	ruleParameter{ after(grammarAccess.getCallAccess().getParametersParameterParserRuleCall_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ResultsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getResultsNamedCallResultParserRuleCall_5_1_0()); }
	ruleNamedCallResult{ after(grammarAccess.getCallAccess().getResultsNamedCallResultParserRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Call__ResultAssignment_6_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCallAccess().getResultVariableParserRuleCall_6_3_0()); }
	ruleVariable{ after(grammarAccess.getCallAccess().getResultVariableParserRuleCall_6_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getNameResultNameParserRuleCall_0_0()); }
	ruleResultName{ after(grammarAccess.getNamedCallResultAccess().getNameResultNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NamedCallResult__TargetAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNamedCallResultAccess().getTargetVariableParserRuleCall_4_0()); }
	ruleVariable{ after(grammarAccess.getNamedCallResultAccess().getTargetVariableParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__MultiplierAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getMultiplierExecutionMultiplierParserRuleCall_2_0_0()); }
	ruleExecutionMultiplier{ after(grammarAccess.getSuiteAccess().getMultiplierExecutionMultiplierParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getDefinitionSuiteDefinitionCrossReference_3_0()); }
(
{ before(grammarAccess.getSuiteAccess().getDefinitionSuiteDefinitionQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteAccess().getDefinitionSuiteDefinitionQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getSuiteAccess().getDefinitionSuiteDefinitionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__ParametersAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getParametersSuiteParameterParserRuleCall_5_0_0()); }
	ruleSuiteParameter{ after(grammarAccess.getSuiteAccess().getParametersSuiteParameterParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__ForkAssignment_6_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getForkForkDefinitionCrossReference_6_2_0()); }
(
{ before(grammarAccess.getSuiteAccess().getForkForkDefinitionQualifiedNameParserRuleCall_6_2_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteAccess().getForkForkDefinitionQualifiedNameParserRuleCall_6_2_0_1()); }
)
{ after(grammarAccess.getSuiteAccess().getForkForkDefinitionCrossReference_6_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Suite__VariantsAssignment_7_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteAccess().getVariantsVariantDefinitionCrossReference_7_2_0_0()); }
(
{ before(grammarAccess.getSuiteAccess().getVariantsVariantDefinitionQualifiedNameParserRuleCall_7_2_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteAccess().getVariantsVariantDefinitionQualifiedNameParserRuleCall_7_2_0_0_1()); }
)
{ after(grammarAccess.getSuiteAccess().getVariantsVariantDefinitionCrossReference_7_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getNameVariableEntityCrossReference_0_0()); }
(
{ before(grammarAccess.getSuiteParameterAccess().getNameVariableEntityQualifiedNameParserRuleCall_0_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getSuiteParameterAccess().getNameVariableEntityQualifiedNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getSuiteParameterAccess().getNameVariableEntityCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__SuiteParameter__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSuiteParameterAccess().getValueValueParserRuleCall_4_0()); }
	ruleValue{ after(grammarAccess.getSuiteParameterAccess().getValueValueParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getNameParameterNameParserRuleCall_0_0()); }
	ruleParameterName{ after(grammarAccess.getParameterAccess().getNameParameterNameParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Parameter__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParameterAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getParameterAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__FixedParameterName__AnnotationAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFixedParameterNameAccess().getAnnotationJvmAnnotationReferenceCrossReference_0()); }
(
{ before(grammarAccess.getFixedParameterNameAccess().getAnnotationJvmAnnotationReferenceIDTerminalRuleCall_0_1()); }
	RULE_ID{ after(grammarAccess.getFixedParameterNameAccess().getAnnotationJvmAnnotationReferenceIDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getFixedParameterNameAccess().getAnnotationJvmAnnotationReferenceCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ArbitraryParameterOrResultName__IdentifierAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArbitraryParameterOrResultNameAccess().getIdentifierIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getArbitraryParameterOrResultNameAccess().getIdentifierIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__FirstOperandAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getFirstOperandValueOrEnumValueOrOperationParserRuleCall_2_0_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getStandardOperationAccess().getFirstOperandValueOrEnumValueOrOperationParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__OperatorsAssignment_3_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getOperatorsARITHMETRIC_OPERATORTerminalRuleCall_3_0_0()); }
	RULE_ARITHMETRIC_OPERATOR{ after(grammarAccess.getStandardOperationAccess().getOperatorsARITHMETRIC_OPERATORTerminalRuleCall_3_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StandardOperation__MoreOperandsAssignment_3_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStandardOperationAccess().getMoreOperandsValueOrEnumValueOrOperationParserRuleCall_3_2_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getStandardOperationAccess().getMoreOperandsValueOrEnumValueOrOperationParserRuleCall_3_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__PrefixOperandAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getPrefixOperandValueOrEnumValueOrOperationCollectionParserRuleCall_2_0_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getCustomOperationAccess().getPrefixOperandValueOrEnumValueOrOperationCollectionParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__DefinitionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getDefinitionOperationDefinitionCrossReference_3_0()); }
(
{ before(grammarAccess.getCustomOperationAccess().getDefinitionOperationDefinitionQualifiedNameParserRuleCall_3_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getCustomOperationAccess().getDefinitionOperationDefinitionQualifiedNameParserRuleCall_3_0_1()); }
)
{ after(grammarAccess.getCustomOperationAccess().getDefinitionOperationDefinitionCrossReference_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__CustomOperation__PostfixOperandAssignment_4_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getCustomOperationAccess().getPostfixOperandValueOrEnumValueOrOperationCollectionParserRuleCall_4_2_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getCustomOperationAccess().getPostfixOperandValueOrEnumValueOrOperationCollectionParserRuleCall_4_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getValueValueOrEnumValueOrOperationParserRuleCall_0_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getValueValueOrEnumValueOrOperationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ValueOrEnumValueOrOperationCollection__MoreValuesAssignment_1_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getMoreValuesValueOrEnumValueOrOperationParserRuleCall_1_3_0()); }
	ruleValueOrEnumValueOrOperation{ after(grammarAccess.getValueOrEnumValueOrOperationCollectionAccess().getMoreValuesValueOrEnumValueOrOperationParserRuleCall_1_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IntegerValue__IntegerValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIntegerValueAccess().getIntegerValueINTEGERTerminalRuleCall_0()); }
	RULE_INTEGER{ after(grammarAccess.getIntegerValueAccess().getIntegerValueINTEGERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DecimalValue__DecimalValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDecimalValueAccess().getDecimalValueDECIMALTerminalRuleCall_0()); }
	RULE_DECIMAL{ after(grammarAccess.getDecimalValueAccess().getDecimalValueDECIMALTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__StringValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getStringValueSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getStringValueAccess().getStringValueSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__BooleanValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getBooleanValueAlternatives_0()); }
(rule__BooleanValue__BooleanValueAlternatives_0)
{ after(grammarAccess.getBooleanValueAccess().getBooleanValueAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsoDateValue__DateValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoDateValueAccess().getDateValueISODATETerminalRuleCall_0()); }
	RULE_ISODATE{ after(grammarAccess.getIsoDateValueAccess().getDateValueISODATETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateValue__DateValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateValueAccess().getDateValueEURODATETerminalRuleCall_0()); }
	RULE_EURODATE{ after(grammarAccess.getEuropeanDateValueAccess().getDateValueEURODATETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__USDateValue__DateValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateValueAccess().getDateValueUSDATETerminalRuleCall_0()); }
	RULE_USDATE{ after(grammarAccess.getUSDateValueAccess().getDateValueUSDATETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsoTimeValue__TimeValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoTimeValueAccess().getTimeValueISOTIMETerminalRuleCall_0()); }
	RULE_ISOTIME{ after(grammarAccess.getIsoTimeValueAccess().getTimeValueISOTIMETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple24HrsTimeValue__TimeValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple24HrsTimeValueAccess().getTimeValueTWENTYFOURHRSTIMETerminalRuleCall_0()); }
	RULE_TWENTYFOURHRSTIME{ after(grammarAccess.getSimple24HrsTimeValueAccess().getTimeValueTWENTYFOURHRSTIMETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Simple12HrsTimeValue__TimeValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSimple12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_0()); }
	RULE_TWELVEHRSTIME{ after(grammarAccess.getSimple12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsoDateAndTimeValue__DateValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoDateAndTimeValueAccess().getDateValueISODATETerminalRuleCall_0_0()); }
	RULE_ISODATE{ after(grammarAccess.getIsoDateAndTimeValueAccess().getDateValueISODATETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__IsoDateAndTimeValue__TimeValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getIsoDateAndTimeValueAccess().getTimeValueISOTIMETerminalRuleCall_1_0()); }
	RULE_ISOTIME{ after(grammarAccess.getIsoDateAndTimeValueAccess().getTimeValueISOTIMETerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd24HrsTimeValue__DateValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getDateValueEURODATETerminalRuleCall_0_0()); }
	RULE_EURODATE{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getDateValueEURODATETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd24HrsTimeValue__TimeValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getTimeValueTWENTYFOURHRSTIMETerminalRuleCall_2_0()); }
	RULE_TWENTYFOURHRSTIME{ after(grammarAccess.getEuropeanDateAnd24HrsTimeValueAccess().getTimeValueTWENTYFOURHRSTIMETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd12HrsTimeValue__DateValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getDateValueEURODATETerminalRuleCall_0_0()); }
	RULE_EURODATE{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getDateValueEURODATETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EuropeanDateAnd12HrsTimeValue__TimeValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_2_0()); }
	RULE_TWELVEHRSTIME{ after(grammarAccess.getEuropeanDateAnd12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__USDateAnd12HrsTimeValue__DateValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getDateValueUSDATETerminalRuleCall_0_0()); }
	RULE_USDATE{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getDateValueUSDATETerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__USDateAnd12HrsTimeValue__TimeValueAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_2_0()); }
	RULE_TWELVEHRSTIME{ after(grammarAccess.getUSDateAnd12HrsTimeValueAccess().getTimeValueTWELVEHRSTIMETerminalRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getVariableAccess().getNameVariableEntityCrossReference_0()); }
(
{ before(grammarAccess.getVariableAccess().getNameVariableEntityQualifiedNameParserRuleCall_0_1()); }
	ruleQualifiedName{ after(grammarAccess.getVariableAccess().getNameVariableEntityQualifiedNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getVariableAccess().getNameVariableEntityCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__EnumValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumValueAccess().getEnumValueJvmEnumerationLiteralCrossReference_0()); }
(
{ before(grammarAccess.getEnumValueAccess().getEnumValueJvmEnumerationLiteralUPPERCASE_IDTerminalRuleCall_0_1()); }
	RULE_UPPERCASE_ID{ after(grammarAccess.getEnumValueAccess().getEnumValueJvmEnumerationLiteralUPPERCASE_IDTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getEnumValueAccess().getEnumValueJvmEnumerationLiteralCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NestedObject__AttributesAssignment_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNestedObjectAccess().getAttributesKeyValuePairParserRuleCall_2_0_0()); }
	ruleKeyValuePair{ after(grammarAccess.getNestedObjectAccess().getAttributesKeyValuePairParserRuleCall_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__IdentifierAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getIdentifierIDTerminalRuleCall_0_0()); }
	RULE_ID{ after(grammarAccess.getKeyValuePairAccess().getIdentifierIDTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__KeyValuePair__ValueAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getKeyValuePairAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
	ruleValueOrEnumValueOrOperationCollection{ after(grammarAccess.getKeyValuePairAccess().getValueValueOrEnumValueOrOperationCollectionParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__JavaClassReference__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getJavaClassReferenceAccess().getTypeJvmTypeCrossReference_0()); }
(
{ before(grammarAccess.getJavaClassReferenceAccess().getTypeJvmTypeQualifiedJavaClassNameParserRuleCall_0_1()); }
	ruleQualifiedJavaClassName{ after(grammarAccess.getJavaClassReferenceAccess().getTypeJvmTypeQualifiedJavaClassNameParserRuleCall_0_1()); }
)
{ after(grammarAccess.getJavaClassReferenceAccess().getTypeJvmTypeCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodReference__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
(
{ before(grammarAccess.getMethodReferenceAccess().getTypeJvmTypeQualifiedJavaClassNameParserRuleCall_0_0_1()); }
	ruleQualifiedJavaClassName{ after(grammarAccess.getMethodReferenceAccess().getTypeJvmTypeQualifiedJavaClassNameParserRuleCall_0_0_1()); }
)
{ after(grammarAccess.getMethodReferenceAccess().getTypeJvmTypeCrossReference_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MethodReference__MethodAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMethodReferenceAccess().getMethodJvmOperationCrossReference_2_0()); }
(
{ before(grammarAccess.getMethodReferenceAccess().getMethodJvmOperationIDTerminalRuleCall_2_0_1()); }
	RULE_ID{ after(grammarAccess.getMethodReferenceAccess().getMethodJvmOperationIDTerminalRuleCall_2_0_1()); }
)
{ after(grammarAccess.getMethodReferenceAccess().getMethodJvmOperationCrossReference_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ExecutionMultiplier__CountAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getExecutionMultiplierAccess().getCountINTEGERTerminalRuleCall_0_0()); }
	RULE_INTEGER{ after(grammarAccess.getExecutionMultiplierAccess().getCountINTEGERTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BOOLEAN_TRUE : 'true';

RULE_BOOLEAN_FALSE : 'false';

RULE_UPPERCASE_ID : 'A'..'Z' ('A'..'Z'|'a'..'z'|'_'|'0'..'9')*;

RULE_ID : '^'? ('a'..'z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INTEGER : '-'? ('0'..'9')+;

RULE_DECIMAL : '-'? ('0'..'9')+ '.' ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_SL_VISIBLE_COMMENT : '-- ' ~(('\n'|'\r'))*;

RULE_ML_VISIBLE_COMMENT : '/-' ( options {greedy=false;} : . )*'-/';

RULE_DIVIDER : '---' '-'*;

RULE_WS : (' '|'\t')+;

RULE_NEWLINE : ('\r'|'\n')+;

RULE_ISODATE : '0'..'9' '0'..'9' '0'..'9' '0'..'9' '-' '0'..'1' '0'..'9' '-' '0'..'3' '0'..'9';

RULE_ISOTIME : ('T' RULE_TWENTYFOURHRSTIME RULE_ISOTIMEZONE?|RULE_TWENTYFOURHRSTIME RULE_ISOTIMEZONE);

RULE_ISOTIMEZONE : ('Z'|('+'|'-') '0'..'2' '0'..'9' ':'? '0'..'5' '0'..'9');

RULE_EURODATE : '0'..'3' '0'..'9' '.' '0'..'1' '0'..'9' '.' '0'..'9' '0'..'9' '0'..'9' '0'..'9';

RULE_USDATE : '0'..'1' '0'..'9' '/' '0'..'3' '0'..'9' '/' '0'..'9' '0'..'9' '0'..'9' '0'..'9';

RULE_TWENTYFOURHRSTIME : '0'..'2' '0'..'9' ':' '0'..'5' '0'..'9' (':' '0'..'6' '0'..'9')?;

RULE_TWELVEHRSTIME : '0'..'1' '0'..'9' ':' '0'..'5' '0'..'9' (':' '0'..'6' '0'..'9')? ('am'|'pm');

RULE_ARITHMETRIC_OPERATOR : ('+'|'-'|'*'|'/'|'%');

RULE_ANY_OTHER : .;


