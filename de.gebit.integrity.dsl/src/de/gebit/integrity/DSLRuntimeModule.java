/*
 * generated by Xtext
 */
package de.gebit.integrity;

import org.eclipse.xtext.conversion.IValueConverterService;

import de.gebit.integrity.conversion.DefaultIntegrityValueConverter;
import de.gebit.integrity.conversion.IntegrityValueConverter;
import de.gebit.integrity.values.DSLValueConverters;

/**
 * Use this class to register components to be used at runtime / without the Equinox extension registry.
 * 
 * @author Rene Schneider
 */
public class DSLRuntimeModule extends de.gebit.integrity.AbstractDSLRuntimeModule {

	/**
	 * The classloader to use for all class resolving in XText.
	 */
	private ClassLoader classLoader;

	/**
	 * Creates a new instance with the classloader of the current class as default.
	 */
	public DSLRuntimeModule() {
		classLoader = getClass().getClassLoader();
	}

	/**
	 * Creates a new instance using the given classloader.
	 * 
	 * @param aClassLoader
	 */
	public DSLRuntimeModule(ClassLoader aClassLoader) {
		classLoader = aClassLoader;
	}

	// SUPPRESS CHECKSTYLE Javadoc
	public Class<? extends IValueConverterService> bindIValueConverterService() {
		return DSLValueConverters.class;
	}

	@Override
	public ClassLoader bindClassLoaderToInstance() {
		return classLoader;
	}

	/*
	 * public Class<? extends ImportUriResolver> bindImportUriResolver() { return TestDSLImportUriResolver.class; }
	 */

	/**
	 * Bind the value converter.
	 */
	public Class<? extends IntegrityValueConverter> bindIntegrityValueConverter() {
		return DefaultIntegrityValueConverter.class;
	}

}
